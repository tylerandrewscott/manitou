timber[NEPA_DOC_NAME=="DEFAULT FOR NOT REQUIRED"]
timber[NEPA_DOC_NAME=="DEFAULT FOR NOT REQUIRED"]$NEPA_PROJECT_ID
timber[!NEPA_PROJECT_ID%in%c('  NOT REQD',"DEFAULT FOR NOT REQUIRED")][!NEPA_PROJECT_ID%in% pals$`PROJECT NUMBER`]$NEPA_DOC_NAME
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]$`PROJECT NAME`
timber[!NEPA_PROJECT_ID%in%c('  NOT REQD',"DEFAULT FOR NOT REQUIRED")][!NEPA_PROJECT_ID%in% pals$`PROJECT NUMBER`]
timber[!NEPA_PROJECT_ID%in%c('  NOT REQD',"DEFAULT FOR NOT REQUIRED")][!NEPA_PROJECT_ID%in% pals$`PROJECT NUMBER`][grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]$`PROJECT NAME`
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]
fs = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vRuz53_guoKQejdd97Syvws360-S7g21tkjeH73OJ1K6zWKNlGwaDRLvd7bbwIoyLmYCf9RWsAzETu-/pub?output=csv',stringsAsFactors = F)
fs$ongoing = 0
fs2 = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vQgOk_TxujlSfspmA9-V4sBS95AMVu7MbjyCmbsIc1yu5N983sJqoR8usHvOXpMl99d1yBYejWoZtdk/pub?output=csv',stringsAsFactors = F)
numcols = colnames(fs2)[as.vector(apply(fs2,2,function(x) !any(grepl('[^0-9]',x))))]
fs2[,(numcols):=lapply(.SD,as.numeric),.SDcols = numcols]
fs = rbind(fs,fs2,use.names = T,fill = NA)
fs = rbind(fs,fs2,use.names = T,fill = T)
fs = fs[!duplicated(paste(`PROJECT NUMBER`,`LMU (ACTUAL)`)),]
#fs = fs2
#fs = fs[fs$`UNIQUE DECISION?`=='Y',]
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Buffalo Ranger District (11040306)"] <- "Blackrock Ranger District (11040306)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Powell Ranger District  (11010506)"] <- "Lochsa/Powell Ranger District (11011755)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Salmon River Ranger District (11050554)"] <- "Salmon-Scott Ranger District (11050554)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Paintrock Ranger District (11020204)"] <- "Salmon-Scott Ranger District (11020203)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Belt Creek Ranger District (11011503)"] <- "Belt Creek-White Sulphur Springs Ranger District (11011507)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Ashton/Island Park (11041552)" ]<- "Ashton/Island Park Ranger District (11041552)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Los Angeles River (11050151)" ]<- "Los Angeles River Ranger District (11050151)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Santa Clara/Mojave Rivers (11050153)"  ]<- "Santa Clara/Mojave Rivers Ranger District (11050153)"
fs$UNIT_ID = str_extract(str_extract(fs$`LMU (ACTUAL)`,'[0-9]{3,}'),'[0-9]{6}$')
fs$UNIT_ID = gsub('^0108','0111',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0105','0117',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0112','0115',fs$UNIT_ID)
fs$UNIT_ID[fs$UNIT_ID=='011702'] <- '011752'
fs$UNIT_ID[fs$UNIT_ID=='011703'] <- '011753'
fs$UNIT_ID[fs$UNIT_ID=='011501'] <- '011511'
fs$UNIT_ID[fs$UNIT_ID=='011504'] <- '011514'
fs$UNIT_ID[fs$UNIT_ID=='011104'] <- '011184'
fs$UNIT_ID[fs$UNIT_ID=='011502'] <- '011512'
fs$UNIT_ID[fs$UNIT_ID=='011102'] <- '011182'
fs$UNIT_ID[fs$UNIT_ID=='011706'] <- '011755'
fs$FOREST_ID <- str_extract(fs$UNIT_ID,'^[0-9]{4}')
fs$REGION_ID <- str_extract(fs$UNIT_ID,'^[0-9]{2}')
#fs = fs[fs$`DECISION TYPE`!='PAD',]
pals = fs
#pals = pals[pals$`INITIATION FY`>=2004,]
pals$`PROJECT NUMBER` <- formatC(pals$`PROJECT NUMBER`,width = 8,flag = 0)
#pals = pals[{`TS Timber salves (green) – activity`==1|`SS Timber sales (salvage) – activity`==1|`FN Fuel treatments – activity`==1|`FV Forest vegetation improvements – activity`==1},]
timber$NEPA_PROJECT_ID <- formatC(timber$NEPA_PROJECT_ID,width = 8,flag = 0)
timber[!NEPA_PROJECT_ID%in%c('  NOT REQD',"DEFAULT FOR NOT REQUIRED")][!NEPA_PROJECT_ID%in% pals$`PROJECT NUMBER`][grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]$`PROJECT NUMBER`
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
require(data.table)
require(stringr)
timber = fread('~/Downloads/Timber_Harvests__Feature_Layer_.csv')
timber = timber
#timber = timber[FY_AWARDED>=2004,]
#timber_nepa = timber[timber$NEPA_PROJECT_ID!='NOT REQD',]
timber$FOREST_ID = paste0(formatC(timber$ADMIN_REGION_CODE,width = 2, flag = 0),formatC(timber$ADMIN_FOREST_CODE,width = 2,flag = 0))
#test=timber[timber$FY_AWARDED=='2014'&!timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
fs = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vRuz53_guoKQejdd97Syvws360-S7g21tkjeH73OJ1K6zWKNlGwaDRLvd7bbwIoyLmYCf9RWsAzETu-/pub?output=csv',stringsAsFactors = F)
fs$ongoing = 0
fs2 = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vQgOk_TxujlSfspmA9-V4sBS95AMVu7MbjyCmbsIc1yu5N983sJqoR8usHvOXpMl99d1yBYejWoZtdk/pub?output=csv',stringsAsFactors = F)
numcols = colnames(fs2)[as.vector(apply(fs2,2,function(x) !any(grepl('[^0-9]',x))))]
fs2[,(numcols):=lapply(.SD,as.numeric),.SDcols = numcols]
fs = rbind(fs,fs2,use.names = T,fill = T)
fs = fs[!duplicated(paste(`PROJECT NUMBER`,`LMU (ACTUAL)`)),]
#fs = fs2
#fs = fs[fs$`UNIQUE DECISION?`=='Y',]
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Buffalo Ranger District (11040306)"] <- "Blackrock Ranger District (11040306)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Powell Ranger District  (11010506)"] <- "Lochsa/Powell Ranger District (11011755)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Salmon River Ranger District (11050554)"] <- "Salmon-Scott Ranger District (11050554)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Paintrock Ranger District (11020204)"] <- "Salmon-Scott Ranger District (11020203)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Belt Creek Ranger District (11011503)"] <- "Belt Creek-White Sulphur Springs Ranger District (11011507)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Ashton/Island Park (11041552)" ]<- "Ashton/Island Park Ranger District (11041552)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Los Angeles River (11050151)" ]<- "Los Angeles River Ranger District (11050151)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Santa Clara/Mojave Rivers (11050153)"  ]<- "Santa Clara/Mojave Rivers Ranger District (11050153)"
fs$UNIT_ID = str_extract(str_extract(fs$`LMU (ACTUAL)`,'[0-9]{3,}'),'[0-9]{6}$')
fs$UNIT_ID = gsub('^0108','0111',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0105','0117',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0112','0115',fs$UNIT_ID)
fs$UNIT_ID[fs$UNIT_ID=='011702'] <- '011752'
fs$UNIT_ID[fs$UNIT_ID=='011703'] <- '011753'
fs$UNIT_ID[fs$UNIT_ID=='011501'] <- '011511'
fs$UNIT_ID[fs$UNIT_ID=='011504'] <- '011514'
fs$UNIT_ID[fs$UNIT_ID=='011104'] <- '011184'
fs$UNIT_ID[fs$UNIT_ID=='011502'] <- '011512'
fs$UNIT_ID[fs$UNIT_ID=='011102'] <- '011182'
fs$UNIT_ID[fs$UNIT_ID=='011706'] <- '011755'
fs$FOREST_ID <- str_extract(fs$UNIT_ID,'^[0-9]{4}')
fs$REGION_ID <- str_extract(fs$UNIT_ID,'^[0-9]{2}')
#fs = fs[fs$`DECISION TYPE`!='PAD',]
pals = fs
#pals = pals[pals$`INITIATION FY`>=2004,]
pals$`PROJECT NUMBER` <- formatC(as.character(pals$`PROJECT NUMBER`),width = 8,flag = 0)
#pals = pals[{`TS Timber salves (green) – activity`==1|`SS Timber sales (salvage) – activity`==1|`FN Fuel treatments – activity`==1|`FV Forest vegetation improvements – activity`==1},]
timber$NEPA_PROJECT_ID <- formatC(as.character(timber$NEPA_PROJECT_ID),width = 8,flag = 0)
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME),]$NEPA_DOC_NAME
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_DOC_NAME
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
formatC(as.character(pals$`PROJECT NUMBER`),width = 8,flag = 0)
formatC(as.character(pals$`PROJECT NUMBER`),width = 8,flag = 0) formatC(as.character(pals$`PROJECT NUMBER`),width = 8,flag = '0')
require(data.table)
require(stringr)
timber = fread('~/Downloads/Timber_Harvests__Feature_Layer_.csv')
timber = timber
#timber = timber[FY_AWARDED>=2004,]
#timber_nepa = timber[timber$NEPA_PROJECT_ID!='NOT REQD',]
timber$FOREST_ID = paste0(formatC(timber$ADMIN_REGION_CODE,width = 2, flag = 0),formatC(timber$ADMIN_FOREST_CODE,width = 2,flag = 0))
#test=timber[timber$FY_AWARDED=='2014'&!timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
fs = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vRuz53_guoKQejdd97Syvws360-S7g21tkjeH73OJ1K6zWKNlGwaDRLvd7bbwIoyLmYCf9RWsAzETu-/pub?output=csv',stringsAsFactors = F)
fs$ongoing = 0
fs2 = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vQgOk_TxujlSfspmA9-V4sBS95AMVu7MbjyCmbsIc1yu5N983sJqoR8usHvOXpMl99d1yBYejWoZtdk/pub?output=csv',stringsAsFactors = F)
numcols = colnames(fs2)[as.vector(apply(fs2,2,function(x) !any(grepl('[^0-9]',x))))]
fs2[,(numcols):=lapply(.SD,as.numeric),.SDcols = numcols]
fs = rbind(fs,fs2,use.names = T,fill = T)
fs = fs[!duplicated(paste(`PROJECT NUMBER`,`LMU (ACTUAL)`)),]
#fs = fs2
#fs = fs[fs$`UNIQUE DECISION?`=='Y',]
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Buffalo Ranger District (11040306)"] <- "Blackrock Ranger District (11040306)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Powell Ranger District  (11010506)"] <- "Lochsa/Powell Ranger District (11011755)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Salmon River Ranger District (11050554)"] <- "Salmon-Scott Ranger District (11050554)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Paintrock Ranger District (11020204)"] <- "Salmon-Scott Ranger District (11020203)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Belt Creek Ranger District (11011503)"] <- "Belt Creek-White Sulphur Springs Ranger District (11011507)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Ashton/Island Park (11041552)" ]<- "Ashton/Island Park Ranger District (11041552)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Los Angeles River (11050151)" ]<- "Los Angeles River Ranger District (11050151)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Santa Clara/Mojave Rivers (11050153)"  ]<- "Santa Clara/Mojave Rivers Ranger District (11050153)"
fs$UNIT_ID = str_extract(str_extract(fs$`LMU (ACTUAL)`,'[0-9]{3,}'),'[0-9]{6}$')
fs$UNIT_ID = gsub('^0108','0111',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0105','0117',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0112','0115',fs$UNIT_ID)
fs$UNIT_ID[fs$UNIT_ID=='011702'] <- '011752'
fs$UNIT_ID[fs$UNIT_ID=='011703'] <- '011753'
fs$UNIT_ID[fs$UNIT_ID=='011501'] <- '011511'
fs$UNIT_ID[fs$UNIT_ID=='011504'] <- '011514'
fs$UNIT_ID[fs$UNIT_ID=='011104'] <- '011184'
fs$UNIT_ID[fs$UNIT_ID=='011502'] <- '011512'
fs$UNIT_ID[fs$UNIT_ID=='011102'] <- '011182'
fs$UNIT_ID[fs$UNIT_ID=='011706'] <- '011755'
fs$FOREST_ID <- str_extract(fs$UNIT_ID,'^[0-9]{4}')
fs$REGION_ID <- str_extract(fs$UNIT_ID,'^[0-9]{2}')
formatC(as.character(pals$`PROJECT NUMBER`),width = 8,flag = '0')
pals$`PROJECT NUMBER`
fs = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vRuz53_guoKQejdd97Syvws360-S7g21tkjeH73OJ1K6zWKNlGwaDRLvd7bbwIoyLmYCf9RWsAzETu-/pub?output=csv',stringsAsFactors = F)
fs$ongoing = 0
fs2 = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vQgOk_TxujlSfspmA9-V4sBS95AMVu7MbjyCmbsIc1yu5N983sJqoR8usHvOXpMl99d1yBYejWoZtdk/pub?output=csv',stringsAsFactors = F)
numcols = colnames(fs2)[as.vector(apply(fs2,2,function(x) !any(grepl('[^0-9]',x))))]
fs2[,(numcols):=lapply(.SD,as.numeric),.SDcols = numcols]
fs = rbind(fs,fs2,use.names = T,fill = T)
fs = fs[!duplicated(paste(`PROJECT NUMBER`,`LMU (ACTUAL)`)),]
#fs = fs2
#fs = fs[fs$`UNIQUE DECISION?`=='Y',]
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Buffalo Ranger District (11040306)"] <- "Blackrock Ranger District (11040306)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Powell Ranger District  (11010506)"] <- "Lochsa/Powell Ranger District (11011755)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Salmon River Ranger District (11050554)"] <- "Salmon-Scott Ranger District (11050554)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Paintrock Ranger District (11020204)"] <- "Salmon-Scott Ranger District (11020203)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Belt Creek Ranger District (11011503)"] <- "Belt Creek-White Sulphur Springs Ranger District (11011507)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Ashton/Island Park (11041552)" ]<- "Ashton/Island Park Ranger District (11041552)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Los Angeles River (11050151)" ]<- "Los Angeles River Ranger District (11050151)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Santa Clara/Mojave Rivers (11050153)"  ]<- "Santa Clara/Mojave Rivers Ranger District (11050153)"
fs$UNIT_ID = str_extract(str_extract(fs$`LMU (ACTUAL)`,'[0-9]{3,}'),'[0-9]{6}$')
fs$UNIT_ID = gsub('^0108','0111',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0105','0117',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0112','0115',fs$UNIT_ID)
fs$UNIT_ID[fs$UNIT_ID=='011702'] <- '011752'
fs$UNIT_ID[fs$UNIT_ID=='011703'] <- '011753'
fs$UNIT_ID[fs$UNIT_ID=='011501'] <- '011511'
fs$UNIT_ID[fs$UNIT_ID=='011504'] <- '011514'
fs$UNIT_ID[fs$UNIT_ID=='011104'] <- '011184'
fs$UNIT_ID[fs$UNIT_ID=='011502'] <- '011512'
fs$UNIT_ID[fs$UNIT_ID=='011102'] <- '011182'
fs$UNIT_ID[fs$UNIT_ID=='011706'] <- '011755'
fs$FOREST_ID <- str_extract(fs$UNIT_ID,'^[0-9]{4}')
fs$REGION_ID <- str_extract(fs$UNIT_ID,'^[0-9]{2}')
fs$`PROJECT NUMBER`
formatC(fs$`PROJECT NUMBER`,width = 8,flag = 0)
fs$`PROJECT NUMBER`<- formatC(fs$`PROJECT NUMBER`,width = 8,flag = 0)
#fs = fs[fs$`DECISION TYPE`!='PAD',]
pals = fs
formatC(as.character(timber$NEPA_PROJECT_ID),width = 8,flag = 0)
formatC(timber$NEPA_PROJECT_ID,width = 8,flag = 0)
timber$NEPA_PROJECT_ID
as.numeric(timber$NEPA_PROJECT_ID)
timber$NEPA_PROJECT_ID <- formatC(as.numeric(timber$NEPA_PROJECT_ID),width = 8,flag = 0)
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_DOC_NAME
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
timber = fread('~/Downloads/Timber_Harvests__Feature_Layer_.csv')
timber = timber
#timber = timber[FY_AWARDED>=2004,]
#timber_nepa = timber[timber$NEPA_PROJECT_ID!='NOT REQD',]
timber$FOREST_ID = paste0(formatC(timber$ADMIN_REGION_CODE,width = 2, flag = 0),formatC(timber$ADMIN_FOREST_CODE,width = 2,flag = 0))
as.integer(timber$NEPA_PROJECT_ID)
timber$NEPA_PROJECT_ID <- formatC(as.integer(timber$NEPA_PROJECT_ID),width = 8,flag = 0)
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`)
timber_nopals = timber[timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
timber_nopals$NEPA_PROJECT_ID
pals[pals$`PROJECT NUMBER`=="00032751"]
timber_nopals = timber[!timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
timber_nopals$NEPA_PROJECT_ID
timber = fread('~/Downloads/Timber_Harvests__Feature_Layer_.csv')
timber = timber
#timber = timber[FY_AWARDED>=2004,]
#timber_nepa = timber[timber$NEPA_PROJECT_ID!='NOT REQD',]
timber$FOREST_ID = paste0(formatC(timber$ADMIN_REGION_CODE,width = 2, flag = 0),formatC(timber$ADMIN_FOREST_CODE,width = 2,flag = 0))
timber$NEPA_PROJECT_ID <- as.integer(timber$NEPA_PROJECT_ID)
timber$NEPA_PROJECT_ID[!is.na(timber$NEPA_PROJECT_ID)]<- formatC(timber$NEPA_PROJECT_ID[!is.na(timber$NEPA_PROJECT_ID)],width = 8,flag = 0)
timber_nopals = timber[!timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
timber_nopals$NEPA_PROJECT_ID
timber_nopals$NEPA_PROJECT_ID[!is.na(timber_nopals$NEPA_PROJECT_ID)]
pals[pals$`PROJECT NUMBER`=="00041466"]
timber_nopals
timber_nopals[!is.na(NEPA_PROJECT_ID)]
timber_nopals[!is.na(NEPA_PROJECT_ID)][,.(FOREST_ID,ADMIN_FOREST_NAME,ADMIN_DISTRICT_NAME,FACTS_ID,SUID,SALE_NAME,ACTIVITY_CN,FY_PLANNED,FY_COMPLETED,NEPA_PROJECT_ID,NEPA_DOC_NAME,NEPA_PROJECT_CN)]
temp = timber_nopals[!is.na(NEPA_PROJECT_ID)][,.(FOREST_ID,ADMIN_FOREST_NAME,ADMIN_DISTRICT_NAME,FACTS_ID,SUID,SALE_NAME,ACTIVITY_CN,FY_PLANNED,FY_COMPLETED,NEPA_PROJECT_ID,NEPA_DOC_NAME,NEPA_PROJECT_CN)]
pals[`PROJECT NUMBER`=='00018152']
temp
saveRDS(temp,'fact_projects_withNEPAID_not_in_PALS.rds')
temp[grepl("PALS",NEPA_DOC_NAME),]
temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME
pals[grepl('TENMILE',toupper(pals$`PROJECT NAME`)),]
pals[grepl('TENMILE',toupper(pals$`PROJECT NAME`)),]$`PROJECT NAME`
temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME
unique(temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME)
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$`PROJECT NAME`
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$FOREST_ID
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$FOREST_ID
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$NEPA_PROJECT_CN
temp$FY_COMPLETED
temp[FY_COMPLETED==2020,]
unique(temp$NEPA_PROJECT_ID)
temp$NEPA_PROJECT_ID
unique(temp$NEPA_PROJECT_ID)
timber[NEPA_PROJECT_ID=='"800541519" ']
timber[NEPA_PROJECT_ID=="800541519" ]
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`)
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,timber$FY_PLANNED)
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,timber$FY_AWARDED)
table(timber$NEPA_PROJECT_ID[!duplicated(timber$NEPA_PROJECT_ID)] %in% pals$`PROJECT NUMBER`,timber$FY_AWARDED[!duplicated(timber$NEPA_PROJECT_ID)])
head(timber)
table(is.na(timber$NEPA_PROJECT_ID),timber$FY_AWARDED)
temp$NEPA_DOC_NAME
temp[NEPA_DOC_NAME=='"CANYON CREEK RESEARCH PROJECT EA",]
table(is.na(timber$NEPA_PROJECT_ID),timber$FY_AWARDED)
head(timber)
timber[NEPA_PROJECT_ID=="800541519" ]
unique(temp$NEPA_PROJECT_ID)
temp$NEPA_PROJECT_ID
unique(temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME)
temp[FY_COMPLETED==2020,]
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$NEPA_PROJECT_CN
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
pals[`PROJECT NUMBER`=='00018152']
timber_nopals$NEPA_PROJECT_ID[!is.na(timber_nopals$NEPA_PROJECT_ID)]
pals[pals$`PROJECT NUMBER`=="00041466"]
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
saveRDS(timber[!NEPA_PROJECT_ID%in%c('  NOT REQD',"DEFAULT FOR NOT REQUIRED")][!NEPA_PROJECT_ID%in% pals$`PROJECT NUMBER`],'timber_FACTS_noPALS.rds')
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]$`PROJECT NUMBER`
23601
17643
00017643
"00017643"
timber[NEPA_DOC_NAME=="DEFAULT FOR NOT REQUIRED"]$NEPA_PROJECT_ID
pals_umpqua = pals[`LMU – FOREST`=='UMPQ']
timber_umpqua = timber[timber$ADMIN_FOREST_NAME=='Umpqua National Forest']
timber_umpqua[NEPA_PROJECT_ID!='NOT REQD'][!NEPA_PROJECT_ID%in% pals_umpqua$`PROJECT NUMBER`]$NEPA_DOC_NAME
pals[`PROJECT NUMBER`=='31206']
pals[`PROJECT NUMBER`=='21106']
table(timber$FY_COMPLETED,is.na(timber$FY_COMPLETED))
table(timber$STAGE_DESC,is.na(timber$STAGE_DESC))
head(timber)
timber$FY
timber[NEPA_DOC_NAME=="(PALS)FINAL DECISION NOTICE/FONSI FOR LOWER STEAMBOAT LSR THINNING PROJECT"]
timber[NEPA_PROJECT_ID=='00040989'|NEPA_PROJECT_CN=='00040989',]
pals[pals$`PROJECT NUMBER`=='00040989',]
40989
pals$`PROJECT NUMBER`
pals[pals$`PROJECT NUMBER`=='00040989']
timber[NEPA]
timber[NEPA_PROJECT_CN=='1769010602']
timber_umpqua
pals[`PROJECT NUMBER`=='00005994',]
pals[grepl("Umpqua",`LMU (ACTUAL)`)]
table(timber[NEPA_PROJECT_ID!='NOT REQD' & !NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]$NEPA_DOC_NAME)
grep('SUNKEN MOOSE',toupper(pals$`PROJECT NAME`),value = T)
pexample = pals[grepl('BLANKENSHIP FUELS',toupper(pals$`PROJECT NAME`)),][,-c(grep('activity$|purpose$',colnames(pals))),with = F]
texample = timber[NEPA_DOC_NAME==toupper('Blankenship Fuels')][,-c(grep('DESC',colnames(timber))),with = F]
saveRDS(pexample,'Desktop/blankenship_in_FACTS.rds')
saveRDS(texample,'Desktop/blankenship_in_PALS.rds')
pexample
timber[timber$NEPA_PROJECT_ID=='14121']
require(data.table)
facts = readRDS('Downloads/blankenship_in_FACTS.rds')
pals = readRDS('Downloads/blankenship_PALS.rds')
timber[,-c(grep('DESC',colnames(timber))),with = F]
timber$NEPA_PROJECT_ID
timber[NEPA_PROJECT_ID=='NOT REQD']
test$NEPA_PROJECT_ID
fs[fs$`PROJECT NUMBER`=='42692',]
table(fs$`FACTS Activity (0,1)`)
test[grepl('PIZZA',toupper(test$SUBUNIT_NAME)),]
pals[grepl('FIBER',toupper(pals$`PROJECT NAME`)),]
pals[grepl('',toupper(pals$`LMU (ACTUAL)`)),]
pals$YEAR = year(mdy(pals$`INITIATION DATE`))
table(pals$`PROJECT NUMBER` %in% timber$NEPA_PROJECT_ID,pals$`DECISION TYPE`)
table(pals$`PROJECT NUMBER` %in% timber$NEPA_PROJECT_ID,pals$YEAR)
table(timber_nepa$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,timber_nepa$FY_AWARDED)
require(lubridate)
pals = pals[year(mdy(pals$`INITIATION DATE`)) %in% 2005:2018,]
pals = pals[grepl('Darby',pals$`LMU (ACTUAL)`),]
timber[NEPA_PROJECT_ID=='17643',]
pals$`PROJECT NUMBER`
pals$`PROJECT NAME`
grep('BITTERROOT',toupper(pals$`PROJECT NAME`),value = T)
timber = st_read('https://opendata.arcgis.com/datasets/2228fa1c8ce94350984871e39acfeeaf_8.geojson')
rangers[grepl('Recreation',rangers$DISTRICTNAME),]
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(INLA)){install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE);require(INLA)}
if(!require(forcats)){install.packages('forcats');library(forcats)}
if(!require(ggstance)){install.packages('ggstance');library(ggstance)}
if(!require(ggthemes)){install.packages('ggthemes');library(ggthemes)}
if(!require(scales)){install.packages('scales');library(scales)}
if(!require(R2HTML)){install.packages('R2HTML');library(R2HTML)}
if(!require(sf)){install.packages('sf');library(sf)}
td = tempdir()
albersNA <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-110 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m"
require(data.table)
require(stringr)
timber = fread('~/Downloads/Timber_Harvests__Feature_Layer_.csv')
timber = timber
#timber = timber[FY_AWARDED>=2004,]
#timber_nepa = timber[timber$NEPA_PROJECT_ID!='NOT REQD',]
timber$FOREST_ID = paste0(formatC(timber$ADMIN_REGION_CODE,width = 2, flag = 0),formatC(timber$ADMIN_FOREST_CODE,width = 2,flag = 0))
timber$NEPA_PROJECT_ID <- as.integer(timber$NEPA_PROJECT_ID)
timber$NEPA_PROJECT_ID[!is.na(timber$NEPA_PROJECT_ID)]<- formatC(timber$NEPA_PROJECT_ID[!is.na(timber$NEPA_PROJECT_ID)],width = 8,flag = 0)
#test=timber[timber$FY_AWARDED=='2014'&!timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
fs = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vRuz53_guoKQejdd97Syvws360-S7g21tkjeH73OJ1K6zWKNlGwaDRLvd7bbwIoyLmYCf9RWsAzETu-/pub?output=csv',stringsAsFactors = F)
fs$ongoing = 0
fs2 = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vQgOk_TxujlSfspmA9-V4sBS95AMVu7MbjyCmbsIc1yu5N983sJqoR8usHvOXpMl99d1yBYejWoZtdk/pub?output=csv',stringsAsFactors = F)
numcols = colnames(fs2)[as.vector(apply(fs2,2,function(x) !any(grepl('[^0-9]',x))))]
fs2[,(numcols):=lapply(.SD,as.numeric),.SDcols = numcols]
fs = rbind(fs,fs2,use.names = T,fill = T)
fs = fs[!duplicated(paste(`PROJECT NUMBER`,`LMU (ACTUAL)`)),]
#fs = fs2
#fs = fs[fs$`UNIQUE DECISION?`=='Y',]
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Buffalo Ranger District (11040306)"] <- "Blackrock Ranger District (11040306)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Powell Ranger District  (11010506)"] <- "Lochsa/Powell Ranger District (11011755)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Salmon River Ranger District (11050554)"] <- "Salmon-Scott Ranger District (11050554)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Paintrock Ranger District (11020204)"] <- "Salmon-Scott Ranger District (11020203)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Belt Creek Ranger District (11011503)"] <- "Belt Creek-White Sulphur Springs Ranger District (11011507)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Ashton/Island Park (11041552)" ]<- "Ashton/Island Park Ranger District (11041552)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Los Angeles River (11050151)" ]<- "Los Angeles River Ranger District (11050151)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Santa Clara/Mojave Rivers (11050153)"  ]<- "Santa Clara/Mojave Rivers Ranger District (11050153)"
fs$UNIT_ID = str_extract(str_extract(fs$`LMU (ACTUAL)`,'[0-9]{3,}'),'[0-9]{6}$')
fs$UNIT_ID = gsub('^0108','0111',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0105','0117',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0112','0115',fs$UNIT_ID)
fs$UNIT_ID[fs$UNIT_ID=='011702'] <- '011752'
fs$UNIT_ID[fs$UNIT_ID=='011703'] <- '011753'
fs$UNIT_ID[fs$UNIT_ID=='011501'] <- '011511'
fs$UNIT_ID[fs$UNIT_ID=='011504'] <- '011514'
fs$UNIT_ID[fs$UNIT_ID=='011104'] <- '011184'
fs$UNIT_ID[fs$UNIT_ID=='011502'] <- '011512'
fs$UNIT_ID[fs$UNIT_ID=='011102'] <- '011182'
fs$UNIT_ID[fs$UNIT_ID=='011706'] <- '011755'
fs$FOREST_ID <- str_extract(fs$UNIT_ID,'^[0-9]{4}')
fs$REGION_ID <- str_extract(fs$UNIT_ID,'^[0-9]{2}')
fs$`PROJECT NUMBER`<- formatC(fs$`PROJECT NUMBER`,width = 8,flag = 0)
#fs = fs[fs$`DECISION TYPE`!='PAD',]
pals = fs
#pals = pals[pals$`INITIATION FY`>=2004,]
#pal
temp[NEPA_DOC_NAME=="CANYON CREEK RESEARCH PROJECT EA",]
pals[`PROJECT NUMBER`=='00098805',]
temp$NEPA_DOC_NAME
temp$NEPA_DOC_NAME[temp$FY_PLANNED==2018]
temp[NEPA_DOC_NAME=="(PALS)MT. HULL RESTORATION PROJECT" ]
pals[`PROJECT NUMBER`=='00056466',]
temp[NEPA_DOC_NAME=="(PALS)MT. HULL RESTORATION PROJECT" ]
pals[`PROJECT NUMBER`=='00051107',]
pals[grep('HULL',toupper(pals$`PROJECT NAME`)),][FOREST_ID=='0617',]
fread('Downloads/BPA Transmission Lines.csv')
require(data.table)
fread('Downloads/BPA Transmission Lines.csv')
fread('Downloads/Electric_Power_Transmission_Lines.csv')
getwd()
setwd('Documents/GitHub/manitou/')
#setwd('../manitou')
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(INLA)){install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE);require(INLA)}
if(!require(INLAutils)){devtools::install_github('timcdlucas/INLAutils');require(INLAutils)}
if(!require(matrixStats)){install.packages('matrixStats');require(matrixStats)}
# From github
library(devtools)
library(ggthemes)
empty_list = data.table()
locs = 'output/policypolitics/model_objects/'
model_sets = list.files('output/policypolitics/model_objects/','models')
model_sets <- model_sets[which(grepl('Purpose.*Extract.*drop',model_sets))]
model_list_of_lists = lapply(model_sets,function(x) readRDS(paste0(locs,x)))
uy_ex = model_list_of_lists[[1]][[1]]$.args$data$Y
uy_rec = model_list_of_lists[[2]][[1]]$.args$data$Y
#correlation between extraction and rec counts
cor(uy_ex[,1],uy_rec[,1],use = 'pairwise.complete.obs')
#correlation between extraction and rec CE ratios
cor(uy_ex[,2],uy_rec[,2],use = 'pairwise.complete.obs')
uy_ex[which(is.na(uy_ex[,2])),1]
eu = as.numeric(uy_ex[1:nrow(uy_ex)/2,1])
ey = as.numeric(uy_ex[(1:nrow(uy_ex)/2) + nrow(uy_ex)/2,2])
cor(cbind(eu,ey),use = 'pairwise.complete.obs')
#cor(eu,ey,use = 'pairwise.complete.obs')
#cor(uy_ex[1:nrow(uy_ex)/2,1],
#uy_ex[(1:nrow(uy_ex)/2) + nrow(uy_ex)/2,2],use = 'pairwise.complete.obs')
#uy_rec[which(is.na(uy_ex[,1])),2]
#cor(uy_ex[!which(is.na(uy_ex[,1])),1],uy_rec[which(is.na(uy_ex[,1])),2],use = 'pairwise.complete.obs')
#modnames = str_remove(str_remove(str_extract(model_sets,'models_[A-Z-a-z_]+'),'models_Type_Purpose'),'models_Type_')
mod_names = gsub('\\.RDS','',str_remove(model_sets,'models_Type_Purpose_'))
bprior <- list(prior = 'gaussian', param = c(0,1))
allvars = lapply(model_list_of_lists,function(x) sapply(x,function(y) y$model.matrix@Dimnames[[2]]))
intervars = lapply(allvars,function(x) lapply(x,function(y) grep(':',y,value=T)))
for(i in seq_along(intervars)){
for(j in seq_along(intervars[[i]])){
if(length(intervars[[i]][[j]])>0){
print(j)
tdt = as.data.table(as.matrix(model_list_of_lists[[i]][[j]]$model.matrix))
iname = lapply(intervars[[i]][[j]],function(k)  k)
ivars = lapply(intervars[[i]][[j]],function(k)  c(unlist(str_split(k,':'))))
temp_vars = data.table(tdt[mu.u ==1,ivars[[1]],with = F],
tdt[mu.u ==0,ivars[[2]],with = F])
cols = unlist(ivars)
x1seq = seq(0.05,0.95,0.05)
x2seq = seq(0.05,0.95,0.05)
u_combos = expand.grid(apply(temp_vars[,ivars[[1]][1],with=F],2,quantile,x1seq),
apply(temp_vars[,ivars[[1]][2],with=F],2,quantile,x2seq))
names(u_combos) = ivars[[1]]
y_combos = expand.grid(apply(temp_vars[,ivars[[2]][1],with=F],2,quantile,x1seq),
apply(temp_vars[,ivars[[2]][2],with=F],2,quantile,x2seq))
names(y_combos) = ivars[[2]]
lcomb_data = data.table(u_combos,y_combos)
lcomb_data = lcomb_data[rowSums(lcomb_data)!=0,]
# lcomb_data = lcomb_data[u_democrat!=0,]
l1 = list(lcomb_data[[ivars[[1]][1]]])
names(l1) <- ivars[[1]][1]
lcu <- inla.make.lincombs(
'l1' = lcomb_data[[ivars[[1]][1]]],
"l2" = lcomb_data[[ivars[[1]][2]]],
"l3"  = lcomb_data[[ivars[[1]][1]]] * lcomb_data[[ivars[[1]][2]]])
for(n in seq_along(lcu)){
names(lcu[[n]][[1]]) <- ivars[[1]][1]
names(lcu[[n]][[2]]) <- ivars[[1]][2]
names(lcu[[n]][[3]]) <- iname[1]
}
lcy <- inla.make.lincombs(
'l1' = lcomb_data[[ivars[[2]][1]]],
"l2" = lcomb_data[[ivars[[2]][2]]],
"l3"  = lcomb_data[[ivars[[2]][1]]] * lcomb_data[[ivars[[2]][2]]])
for(n in seq_along(lcy)){
names(lcy[[n]][[1]]) <- ivars[[2]][1]
names(lcy[[n]][[2]]) <- ivars[[2]][2]
names(lcy[[n]][[3]]) <- iname[2]
}
names(lcu) = paste('u', 1:length(lcu), sep="")
names(lcy) = paste('y', 1:length(lcy), sep="")
lc = c(lcu, lcy)
u.sdres <- sd(model_list_of_lists[[i]][[j]]$.args$data$u,na.rm = T)#sd(y_like[is.finite(y_lik)])
y.sdres <- sd(model_list_of_lists[[i]][[j]]$.args$data$y/model_list_of_lists[[i]][[j]]$.args$data$u,na.rm=T)
pc.prec.u = list(prec = list(prior = "pc.prec", param = c(3*u.sdres, 0.01)))
pc.prec.y = list(prec = list(prior = "pc.prec", param = c(3*y.sdres, 0.01)))
# famcontrol = list(list(prior = "pcprec", param = c(3*u.sdres,0.01)),
#                  list(prior = "pcprec", param = c(3*y.sdres,0.01)))
newmodel = inla(formula = model_list_of_lists[[i]][[j]]$.args$formula ,control.compute = list(waic=TRUE,dic=TRUE),
c('poisson', 'binomial'),Ntrials = model_list_of_lists[[i]][[j]]$.args$Ntrials,
# control.inla= list(strategy = "gaussian", int.strategy = "eb"),
#control.family = famcontrol,
control.fixed = list(expand.factor.strategy = "inla"),
data=model_list_of_lists[[i]][[j]]$.args$data,lincomb = lc,
control.update = list(result = model_list_of_lists[[i]][[j]]),
control.predictor=list(compute=TRUE),verbose=F)
lcd = newmodel$summary.lincomb.derived
lcd$id = rownames(lcd)
lcd$group = str_extract(lcd$id,'^[u-y]')
lcd$group = ifelse(lcd$group== 'u','Project count','CE/total NEPA analyses')
lcd$group <- fct_rev(as.factor(lcd$group))
qvals = rbind(lcomb_data[,1:2],lcomb_data[,3:4],use.names = F)
names(qvals) <- c('scale_val1','scale_val2')
lcd$x1_quantile = unlist(replicate(2,rep(x1seq,nrow(lcd)/2/length(x1seq)),simplify = F))
lcd$x2_quantile = unlist(replicate(2,rep(x2seq,each = nrow(lcd)/2/length(x2seq)),simplify = F))
lcd = cbind(lcd,qvals)
axnames = unique(str_remove(names(temp_vars),'^[u-y]_'))
lcd[[axnames[[1]]]]<-lcomb_data[[names(temp_vars)[1]]]
lcd[[axnames[[2]]]]<-lcomb_data[[names(temp_vars)[2]]]
intername = gsub(':','x',str_remove_all(iname[[1]],'u_'))
figname = paste(mod_names[i],intername,sep='_')
lcd = data.table(lcd)
#lcd = lcd[!duplicated(paste(scale_val1,scale_val2,group)),]
lcd$i = i
lcd$j = j
lcd$DV <- mod_names[i]
empty_list = rbind(empty_list,lcd,fill = T,use.names = T)
}
}
}
empty_list$DV
