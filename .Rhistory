timber_nopals$NEPA_PROJECT_ID[!is.na(timber_nopals$NEPA_PROJECT_ID)]
pals[pals$`PROJECT NUMBER`=="00041466"]
timber_nopals
timber_nopals[!is.na(NEPA_PROJECT_ID)]
timber_nopals[!is.na(NEPA_PROJECT_ID)][,.(FOREST_ID,ADMIN_FOREST_NAME,ADMIN_DISTRICT_NAME,FACTS_ID,SUID,SALE_NAME,ACTIVITY_CN,FY_PLANNED,FY_COMPLETED,NEPA_PROJECT_ID,NEPA_DOC_NAME,NEPA_PROJECT_CN)]
temp = timber_nopals[!is.na(NEPA_PROJECT_ID)][,.(FOREST_ID,ADMIN_FOREST_NAME,ADMIN_DISTRICT_NAME,FACTS_ID,SUID,SALE_NAME,ACTIVITY_CN,FY_PLANNED,FY_COMPLETED,NEPA_PROJECT_ID,NEPA_DOC_NAME,NEPA_PROJECT_CN)]
pals[`PROJECT NUMBER`=='00018152']
temp
saveRDS(temp,'fact_projects_withNEPAID_not_in_PALS.rds')
temp[grepl("PALS",NEPA_DOC_NAME),]
temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME
pals[grepl('TENMILE',toupper(pals$`PROJECT NAME`)),]
pals[grepl('TENMILE',toupper(pals$`PROJECT NAME`)),]$`PROJECT NAME`
temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME
unique(temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME)
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$`PROJECT NAME`
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$FOREST_ID
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$FOREST_ID
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$NEPA_PROJECT_CN
temp$FY_COMPLETED
temp[FY_COMPLETED==2020,]
unique(temp$NEPA_PROJECT_ID)
temp$NEPA_PROJECT_ID
unique(temp$NEPA_PROJECT_ID)
timber[NEPA_PROJECT_ID=='"800541519" ']
timber[NEPA_PROJECT_ID=="800541519" ]
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`)
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,timber$FY_PLANNED)
table(timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,timber$FY_AWARDED)
table(timber$NEPA_PROJECT_ID[!duplicated(timber$NEPA_PROJECT_ID)] %in% pals$`PROJECT NUMBER`,timber$FY_AWARDED[!duplicated(timber$NEPA_PROJECT_ID)])
head(timber)
table(is.na(timber$NEPA_PROJECT_ID),timber$FY_AWARDED)
temp$NEPA_DOC_NAME
temp[NEPA_DOC_NAME=='"CANYON CREEK RESEARCH PROJECT EA",]
table(is.na(timber$NEPA_PROJECT_ID),timber$FY_AWARDED)
head(timber)
timber[NEPA_PROJECT_ID=="800541519" ]
unique(temp$NEPA_PROJECT_ID)
temp$NEPA_PROJECT_ID
unique(temp[grepl("PALS",NEPA_DOC_NAME),]$NEPA_DOC_NAME)
temp[FY_COMPLETED==2020,]
temp[grepl('WEDINGTON',toupper(temp$NEPA_DOC_NAME)),]$NEPA_PROJECT_CN
pals[grepl('WEDINGTON',toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
pals[`PROJECT NUMBER`=='00018152']
timber_nopals$NEPA_PROJECT_ID[!is.na(timber_nopals$NEPA_PROJECT_ID)]
pals[pals$`PROJECT NUMBER`=="00041466"]
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
timber[grepl('DULLKNIFE',toupper(NEPA_DOC_NAME)),]$NEPA_PROJECT_ID
pals[grepl("DULLKNIFE",toupper(pals$`PROJECT NAME`)),]$`PROJECT NUMBER`
saveRDS(timber[!NEPA_PROJECT_ID%in%c('  NOT REQD',"DEFAULT FOR NOT REQUIRED")][!NEPA_PROJECT_ID%in% pals$`PROJECT NUMBER`],'timber_FACTS_noPALS.rds')
pals[grepl('DULLKNIFE',toupper(pals$`PROJECT NAME`))]$`PROJECT NUMBER`
23601
17643
00017643
"00017643"
timber[NEPA_DOC_NAME=="DEFAULT FOR NOT REQUIRED"]$NEPA_PROJECT_ID
pals_umpqua = pals[`LMU â€“ FOREST`=='UMPQ']
timber_umpqua = timber[timber$ADMIN_FOREST_NAME=='Umpqua National Forest']
timber_umpqua[NEPA_PROJECT_ID!='NOT REQD'][!NEPA_PROJECT_ID%in% pals_umpqua$`PROJECT NUMBER`]$NEPA_DOC_NAME
pals[`PROJECT NUMBER`=='31206']
pals[`PROJECT NUMBER`=='21106']
table(timber$FY_COMPLETED,is.na(timber$FY_COMPLETED))
table(timber$STAGE_DESC,is.na(timber$STAGE_DESC))
head(timber)
timber$FY
timber[NEPA_DOC_NAME=="(PALS)FINAL DECISION NOTICE/FONSI FOR LOWER STEAMBOAT LSR THINNING PROJECT"]
timber[NEPA_PROJECT_ID=='00040989'|NEPA_PROJECT_CN=='00040989',]
pals[pals$`PROJECT NUMBER`=='00040989',]
40989
pals$`PROJECT NUMBER`
pals[pals$`PROJECT NUMBER`=='00040989']
timber[NEPA]
timber[NEPA_PROJECT_CN=='1769010602']
timber_umpqua
pals[`PROJECT NUMBER`=='00005994',]
pals[grepl("Umpqua",`LMU (ACTUAL)`)]
table(timber[NEPA_PROJECT_ID!='NOT REQD' & !NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]$NEPA_DOC_NAME)
grep('SUNKEN MOOSE',toupper(pals$`PROJECT NAME`),value = T)
pexample = pals[grepl('BLANKENSHIP FUELS',toupper(pals$`PROJECT NAME`)),][,-c(grep('activity$|purpose$',colnames(pals))),with = F]
texample = timber[NEPA_DOC_NAME==toupper('Blankenship Fuels')][,-c(grep('DESC',colnames(timber))),with = F]
saveRDS(pexample,'Desktop/blankenship_in_FACTS.rds')
saveRDS(texample,'Desktop/blankenship_in_PALS.rds')
pexample
timber[timber$NEPA_PROJECT_ID=='14121']
require(data.table)
facts = readRDS('Downloads/blankenship_in_FACTS.rds')
pals = readRDS('Downloads/blankenship_PALS.rds')
timber[,-c(grep('DESC',colnames(timber))),with = F]
timber$NEPA_PROJECT_ID
timber[NEPA_PROJECT_ID=='NOT REQD']
test$NEPA_PROJECT_ID
fs[fs$`PROJECT NUMBER`=='42692',]
table(fs$`FACTS Activity (0,1)`)
test[grepl('PIZZA',toupper(test$SUBUNIT_NAME)),]
pals[grepl('FIBER',toupper(pals$`PROJECT NAME`)),]
pals[grepl('',toupper(pals$`LMU (ACTUAL)`)),]
pals$YEAR = year(mdy(pals$`INITIATION DATE`))
table(pals$`PROJECT NUMBER` %in% timber$NEPA_PROJECT_ID,pals$`DECISION TYPE`)
table(pals$`PROJECT NUMBER` %in% timber$NEPA_PROJECT_ID,pals$YEAR)
table(timber_nepa$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,timber_nepa$FY_AWARDED)
require(lubridate)
pals = pals[year(mdy(pals$`INITIATION DATE`)) %in% 2005:2018,]
pals = pals[grepl('Darby',pals$`LMU (ACTUAL)`),]
timber[NEPA_PROJECT_ID=='17643',]
pals$`PROJECT NUMBER`
pals$`PROJECT NAME`
grep('BITTERROOT',toupper(pals$`PROJECT NAME`),value = T)
timber = st_read('https://opendata.arcgis.com/datasets/2228fa1c8ce94350984871e39acfeeaf_8.geojson')
rangers[grepl('Recreation',rangers$DISTRICTNAME),]
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(INLA)){install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE);require(INLA)}
if(!require(forcats)){install.packages('forcats');library(forcats)}
if(!require(ggstance)){install.packages('ggstance');library(ggstance)}
if(!require(ggthemes)){install.packages('ggthemes');library(ggthemes)}
if(!require(scales)){install.packages('scales');library(scales)}
if(!require(R2HTML)){install.packages('R2HTML');library(R2HTML)}
if(!require(sf)){install.packages('sf');library(sf)}
td = tempdir()
albersNA <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-110 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m"
require(data.table)
require(stringr)
timber = fread('~/Downloads/Timber_Harvests__Feature_Layer_.csv')
timber = timber
#timber = timber[FY_AWARDED>=2004,]
#timber_nepa = timber[timber$NEPA_PROJECT_ID!='NOT REQD',]
timber$FOREST_ID = paste0(formatC(timber$ADMIN_REGION_CODE,width = 2, flag = 0),formatC(timber$ADMIN_FOREST_CODE,width = 2,flag = 0))
timber$NEPA_PROJECT_ID <- as.integer(timber$NEPA_PROJECT_ID)
timber$NEPA_PROJECT_ID[!is.na(timber$NEPA_PROJECT_ID)]<- formatC(timber$NEPA_PROJECT_ID[!is.na(timber$NEPA_PROJECT_ID)],width = 8,flag = 0)
#test=timber[timber$FY_AWARDED=='2014'&!timber$NEPA_PROJECT_ID %in% pals$`PROJECT NUMBER`,]
fs = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vRuz53_guoKQejdd97Syvws360-S7g21tkjeH73OJ1K6zWKNlGwaDRLvd7bbwIoyLmYCf9RWsAzETu-/pub?output=csv',stringsAsFactors = F)
fs$ongoing = 0
fs2 = fread('https://docs.google.com/spreadsheets/d/e/2PACX-1vQgOk_TxujlSfspmA9-V4sBS95AMVu7MbjyCmbsIc1yu5N983sJqoR8usHvOXpMl99d1yBYejWoZtdk/pub?output=csv',stringsAsFactors = F)
numcols = colnames(fs2)[as.vector(apply(fs2,2,function(x) !any(grepl('[^0-9]',x))))]
fs2[,(numcols):=lapply(.SD,as.numeric),.SDcols = numcols]
fs = rbind(fs,fs2,use.names = T,fill = T)
fs = fs[!duplicated(paste(`PROJECT NUMBER`,`LMU (ACTUAL)`)),]
#fs = fs2
#fs = fs[fs$`UNIQUE DECISION?`=='Y',]
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Buffalo Ranger District (11040306)"] <- "Blackrock Ranger District (11040306)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Powell Ranger District  (11010506)"] <- "Lochsa/Powell Ranger District (11011755)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Salmon River Ranger District (11050554)"] <- "Salmon-Scott Ranger District (11050554)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Paintrock Ranger District (11020204)"] <- "Salmon-Scott Ranger District (11020203)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Belt Creek Ranger District (11011503)"] <- "Belt Creek-White Sulphur Springs Ranger District (11011507)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Ashton/Island Park (11041552)" ]<- "Ashton/Island Park Ranger District (11041552)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Los Angeles River (11050151)" ]<- "Los Angeles River Ranger District (11050151)"
fs$`LMU (ACTUAL)`[fs$`LMU (ACTUAL)`=="Santa Clara/Mojave Rivers (11050153)"  ]<- "Santa Clara/Mojave Rivers Ranger District (11050153)"
fs$UNIT_ID = str_extract(str_extract(fs$`LMU (ACTUAL)`,'[0-9]{3,}'),'[0-9]{6}$')
fs$UNIT_ID = gsub('^0108','0111',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0105','0117',fs$UNIT_ID)
fs$UNIT_ID = gsub('^0112','0115',fs$UNIT_ID)
fs$UNIT_ID[fs$UNIT_ID=='011702'] <- '011752'
fs$UNIT_ID[fs$UNIT_ID=='011703'] <- '011753'
fs$UNIT_ID[fs$UNIT_ID=='011501'] <- '011511'
fs$UNIT_ID[fs$UNIT_ID=='011504'] <- '011514'
fs$UNIT_ID[fs$UNIT_ID=='011104'] <- '011184'
fs$UNIT_ID[fs$UNIT_ID=='011502'] <- '011512'
fs$UNIT_ID[fs$UNIT_ID=='011102'] <- '011182'
fs$UNIT_ID[fs$UNIT_ID=='011706'] <- '011755'
fs$FOREST_ID <- str_extract(fs$UNIT_ID,'^[0-9]{4}')
fs$REGION_ID <- str_extract(fs$UNIT_ID,'^[0-9]{2}')
fs$`PROJECT NUMBER`<- formatC(fs$`PROJECT NUMBER`,width = 8,flag = 0)
#fs = fs[fs$`DECISION TYPE`!='PAD',]
pals = fs
#pals = pals[pals$`INITIATION FY`>=2004,]
#pal
temp[NEPA_DOC_NAME=="CANYON CREEK RESEARCH PROJECT EA",]
pals[`PROJECT NUMBER`=='00098805',]
temp$NEPA_DOC_NAME
temp$NEPA_DOC_NAME[temp$FY_PLANNED==2018]
temp[NEPA_DOC_NAME=="(PALS)MT. HULL RESTORATION PROJECT" ]
pals[`PROJECT NUMBER`=='00056466',]
temp[NEPA_DOC_NAME=="(PALS)MT. HULL RESTORATION PROJECT" ]
pals[`PROJECT NUMBER`=='00051107',]
pals[grep('HULL',toupper(pals$`PROJECT NAME`)),][FOREST_ID=='0617',]
library(reticulate)
library(purrr)
library(text2vec)
library(dplyr)
library(Rtsne)
library(ggplot2)
library(plotly)
library(stringr)
library(tensorflow)
library(keras)
tf$constant("Hellow Tensorflow")
install_tensorflow()
install_tensorflow(method = "conda")
which conda
where conda
use_condaenv('/opt/anaconda3/bin/conda')
install_tensorflow(method = "conda")
install_tensorflow(conda = '/opt/anaconda3/bin/conda')
system('which python')
system('which conda')
system('where conda')
system('which conda')
Sys.setenv(RETICULATE_PYTHON="/opt/anaconda3/bin/conda")
library(keras)
install_keras()
Sys.setenv(RETICULATE_PYTHON="~/opt/anaconda3/bin/conda")
library(keras)
install_keras()
system('which python3')
Sys.setenv(RETICULATE_PYTHON="/usr/bin/python3")
library(reticulate)
library(purrr)
library(text2vec)
library(dplyr)
library(Rtsne)
library(ggplot2)
library(plotly)
library(stringr)
library(tensorflow)
library(keras)
tf
tf$constant("Hellow Tensorflow")
reticulate::use_python("/usr/bin/python3")
tf$constant("Hellow Tensorflow")
reticulate::py_discover_config()
gewtd()
getwd()
setwd('Documents/GitHub/manitou/')
require(data.table)
require(tidyverse)
readRDS('input/politics/countyVoteShare_3-2020.rds')
vs = readRDS('input/politics/countyVoteShare_3-2020.rds')
vs[!is.na(percentD_H),]
vs = readRDS('input/politics/countyVoteShare_3-2020.rds')
vs[!is.na(percentD_H),]
vs
vs = data.table(readRDS('input/politics/countyVoteShare_3-2020.rds'))
vs[!is.na(percentD_H),]
readRDS('input/politics/houseAtts_5-2019.RDS')
fread('input/politics/1976-2018-house.csv')
votes=fread('input/politics/1976-2018-house.csv')
votes = data.table(votes)
votes[year %in% 2005:2018,]
votes = votes[year %in% 2005:2018,]
votes = votes[!is.na(party),]
table(votes$party)
votes[order(year,state_fips,district),]
votes[order(year,state_fips,district,candidatevotes),]
votes[order(year,state_fips,district,candidatevotes),][,seq_along(year),by=.(year,state,district)]
votes[order(year,state_fips,district,candidatevotes),][,rank(candidatevotes),by=.(year,state,district)]
votes[order(year,state_fips,district,candidatevotes),][,voterank:=rank(candidatevotes),by=.(year,state,district)]
votes
votes[,voterank:=rank(candidatevotes),by=.(year,state,district)]
votes
votes[voterank<=2,]
votes = votes[voterank<=2,]
ggplot() + geom_point(aes(x = paste(state_fips,district,sep = '_'),y = candidatevotes/totalvotes),data = votes[voterank=1,])
ggplot() +
geom_point(aes(x = paste(state_fips,district,sep = '_'),y = candidatevotes/totalvotes),data = votes[voterank==1,])
votes$totalvotes
votes$candidatevotes
votes$candidatevotes <- as.numeric(votes$candidatevotes)
ggplot() +
geom_point(aes(x = paste(state_fips,district,sep = '_'),y = candidatevotes/totalvotes),data = votes[voterank==1,])
votes = votes[candidatevotes<=totalvotes,]
ggplot() +
geom_point(aes(x = paste(state_fips,district,sep = '_'),y = candidatevotes/totalvotes),data = votes[voterank==1,])
ggplot() +
geom_point(aes(x = paste(state_fips,district,sep = '_'),y = candidatevotes/totalvotes),data = votes[voterank==1,]) +
facet_wrap(~year)
votes
votes$voteperc = votes$candidatevotes/votes$totalvotes
votes
votes$invert = ifelse(votes$voterank==1,voteperc,voteper*-1)
votes$invert = ifelse(votes$voterank==1,votes$voteperc,voteper*-1)
votes$invert = ifelse(votes$voterank==1,votes$voteperc,voteperc*-1)
votes$invert = ifelse(votes$voterank==1,votes$voteperc,votes$voteperc*-1)
votes[,absdiff:=sum(voteperc),by=.(year,state_fips,district)]
votes
votes[,absdiff:=sum(invert),by=.(year,state_fips,district)]
votes
votes[,diffrank:=rank(absdiff),by=.(year)]
ggplot(data = votes) + geom_point(aes(x = rank,y = absdiff)) + facet_wrap(~year)
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year)
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1))
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2)
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2) + theme_bw()
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2) + theme_bw() +
xlab('test')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2) + theme_bw() +
xlab('(ordered by % difference between two leading vote getters')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2,col = 'test') + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 2,aes(col = 'test')) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),lty = 'test') + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
geom_hline(yintercept = c(0.1,-0.1),aes(linetype = 'test') + theme_bw() +
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),aes(linetype = 'test')) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),aes(linetype = 'test')) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1),aes(linetype = 'test')) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(aes(linetype = 'test',yintercept = c(0.1,-0.1))) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(aes(linetype = 'test',yintercept = c(0.1,-0.1))) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1))) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference between') +
ylab('% of votes for winner - % for runner-up')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference between') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1))
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1))
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff)) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
votes
ggplot(data = votes[!duplicated(paste(year,state_fips,district)),]) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
require(data.table)
require(tidyverse)
vs = data.table(readRDS('input/politics/countyVoteShare_3-2020.rds'))
vs
votes=fread('input/politics/1976-2018-house.csv')
votes = data.table(votes)
votes = votes[year %in% 2005:2018,]
votes = votes[!is.na(party),]
votes[,voterank:=rank(candidatevotes,method = 'first'),by=.(year,state,district)]
votes = votes[voterank<=2,]
votes$candidatevotes <- as.numeric(votes$candidatevotes)
votes = votes[candidatevotes<=totalvotes,]
votes$voteperc = votes$candidatevotes/votes$totalvotes
votes$invert = ifelse(votes$voterank==1,votes$voteperc,votes$voteperc*-1)
votes[,absdiff:=sum(invert),by=.(year,state_fips,district)]
votes[,diffrank:=rank(absdiff,ties.method = 'first'),by=.(year)]
ggplot(data = votes[!duplicated(paste(year,state_fips,district)),]) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
require(data.table)
require(tidyverse)
vs = data.table(readRDS('input/politics/countyVoteShare_3-2020.rds'))
vs
votes=fread('input/politics/1976-2018-house.csv')
votes = data.table(votes)
votes = votes[year %in% 2005:2018,]
votes = votes[!is.na(party),]
votes[,voterank:=rank(candidatevotes,method = 'first'),by=.(year,state,district)]
votes = votes[voterank<=2,]
votes$candidatevotes <- as.numeric(votes$candidatevotes)
votes = votes[candidatevotes<=totalvotes,]
votes$voteperc = votes$candidatevotes/votes$totalvotes
votes$invert = ifelse(votes$voterank==1,votes$voteperc,votes$voteperc*-1)
votes[,absdiff:=sum(invert),by=.(year,state_fips,district)]
votes[,diffrank:=rank(absdiff,ties.method = 'first'),by=.(year)]
votes
require(data.table)
require(tidyverse)
vs = data.table(readRDS('input/politics/countyVoteShare_3-2020.rds'))
vs
votes=fread('input/politics/1976-2018-house.csv')
votes = data.table(votes)
votes = votes[year %in% 2005:2018,]
votes = votes[!is.na(party),]
votes[,voterank:=rank(candidatevotes,method = 'first'),by=.(year,state,district)]
votes = votes[voterank<=2,]
votes$candidatevotes <- as.numeric(votes$candidatevotes)
votes = votes[candidatevotes<=totalvotes,]
votes=fread('input/politics/1976-2018-house.csv')
votes = data.table(votes)
votes = votes[year %in% 2005:2018,]
votes = votes[!is.na(party),]
votes[,voterank:=rank(candidatevotes,ties.method = 'first'),by=.(year,state,district)]
votes = votes[voterank<=2,]
votes$candidatevotes <- as.numeric(votes$candidatevotes)
votes = votes[candidatevotes<=totalvotes,]
votes$voteperc = votes$candidatevotes/votes$totalvotes
votes$invert = ifelse(votes$voterank==1,votes$voteperc,votes$voteperc*-1)
votes[,absdiff:=sum(invert),by=.(year,state_fips,district)]
votes[,diffrank:=rank(absdiff,ties.method = 'first'),by=.(year)]
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
votes = votes[!duplicated(paste(state,district,year,sep = '_')),]
require(data.table)
require(tidyverse)
votes=fread('input/politics/1976-2018-house.csv')
votes = data.table(votes)
votes = votes[year %in% 2005:2018,]
votes = votes[!is.na(party),]
votes[,voterank:=rank(candidatevotes,ties.method = 'first'),by=.(year,state,district)]
votes = votes[voterank<=2,]
votes$candidatevotes <- as.numeric(votes$candidatevotes)
votes = votes[candidatevotes<=totalvotes,]
votes$voteperc = votes$candidatevotes/votes$totalvotes
votes$invert = ifelse(votes$voterank==1,votes$voteperc,votes$voteperc*-1)
votes[,absdiff:=sum(invert),by=.(year,state_fips,district)]
votes = votes[!duplicated(paste(state,district,year,sep = '_')),]
votes[,diffrank:=rank(absdiff,ties.method = 'first'),by=.(year)]
ggplot(data = votes) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
table(votes$absdiff<0.1&votes$absdiff>-0.1)
table(votes$absdiff<0.1&votes$absdiff>-0.1,year)
table(votes$absdiff<0.1&votes$absdiff>-0.1,votes$year)
require(tigris)
require(sf)
cds = tigris::congressional_districts('2012',class='sf')
head(cds)
cds = tigris::congressional_districts(year = '2012',class='sf')
forests = st_read('https://opendata.arcgis.com/datasets/09e4c1162a4d4af3a84163cbc76108c4_1.geojson')
cds_transformed = st_transform(cds,st_crs(forests))
head(cds_transformed)
head(votes)
paste0(formatC(votes$state_fips,width = 2,flag = 0),formatC(votes$district,width = 2,flag = 0))
votes$CD_ID = paste0(formatC(votes$state_fips,width = 2,flag = 0),formatC(votes$district,width = 2,flag = 0))
table(votes$CD_ID[votes$year==2012] %in% cds_transformed$CD112FP)
head(cds_transformed)
table(votes$CD_ID[votes$year==2012] %in% cds_transformed$GEOID)
votes$CD_ID[votes$year==2012][!votes$CD_ID[votes$year==2012] %in% cds_transformed$GEOID]
votes[state_fips==48,]
votes[state_fips==48&year==2012,]
votes[year==2012&!CD_ID%in%cds_transformed$GEOID,]
cds_transformed[cds_transformed$STATEFP=='04',]
cds = tigris::congressional_districts(year = '2012',class='sf')
cds_transformed = st_transform(cds,st_crs(forests))
votes[year==2012&!CD_ID%in%cds_transformed$GEOID,]
cds = tigris::congressional_districts(year = '2013',class='sf')
cds_transformed = st_transform(cds,st_crs(forests))
votes[year==2012&!CD_ID%in%cds_transformed$GEOID,]
over_a_forest = st_overlaps(cds_transformed,forests)
over_a_forest
sapply(over_a_forest,length)
sapply(over_a_forest,length)>0
votes[year==2012&CD_ID %in% cds_transformed$GEOID[sapply(over_a_forest,length)>0],]
votes2012forest = votes[year==2012&CD_ID %in% cds_transformed$GEOID[sapply(over_a_forest,length)>0],]
ggplot(data = votes2012forest) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
votes2012forest
votes2012forest[,diffrank := rank(absdiff,ties.method = 'first')]
ggplot(data = votes2012forest) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district')
ggplot(data = votes2012forest) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness by year and house district','Districts overlapping a forest')
ggplot(data = votes2012forest) + geom_point(aes(x = diffrank,y = absdiff),pch = 21) + facet_wrap(~year) +
geom_hline(yintercept = c(0.1,-0.1)) + theme_bw() +
xlab('(ordered by % difference)') +
scale_y_continuous('% of votes for winner - % for runner-up',breaks = c(-1,-0.5,-0.1,0.1,0.5,1)) +
ggtitle('Election closeness, 2012 house elections','Districts overlapping a forest')
