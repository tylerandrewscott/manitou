'(intercept)' = 'mu.u',
'% wilderness area' = 'Wilderness_Perc',
'% dem. vote share' = 'percentD_H',
'% housing in WUI' = 'Perc_WUI_Housing',
'# listed species' = 'Count_EorT_Species','ln(forest acreage)'='Ln_ACRES',
'% burned (last 5 years)'='Burned_Perc_Past5yrs','LCV annual score'='LCV_annual',
'Unemployment %' = 'Unemp_Rate','% extraction employ.' = 'Perc_Extraction_Employ',
'ln(yearly visitation)' = 'Ln_AVERAGE_YEARLY_VISITS','ln(county NR GDP ($1M))' = 'ln_County_naturalresource_GDP_1M',
'ln(avg. board feet, 1999 to 2004)' = "Ln_Avg_MBF_Cut_1999_2004" ,
'NEPA grazing actions, 1993 to 2004' = "ALLOTMENT_NEPA_1993_2004",
'Mining claim actions, 1993 to 2004' = "MINING_CLAIM_ACTIONS_1993_2004" ,
'Democratic president' = 'demPres','Democratic congress' = 'demCongress',
"% dem. vote x unemp. %" = "Unemp_RatexpercentD_H"   ,
'Dem. rep.' = 'democrat','Dem. rep. x unemp. %' = "Unemp_Ratexdemocrat" ,
'LCV annual x unemp. %' = 'Unemp_RatexLCV_annual',
'House committee LCV' = 'ComLCV','House chair LCV' = 'ChairLCV')
simple_table$coef  = fct_relevel( simple_table$coef ,'ln(forest acreage)','ln(yearly visitation)',
'ln(avg. board feet, 1999 to 2004)' ,
'NEPA grazing actions, 1993 to 2004' ,
'Mining claim actions, 1993 to 2004',
'% wilderness area','# listed species','% burned (last 5 years)','% housing in WUI',
'% extraction employ.','ln(county NR GDP ($1M))',
'Democratic president','Democratic congress',
'% dem. vote share','LCV annual score','Dem. rep.', 'Unemployment %',
"% dem. vote x unemp. %",'LCV annual x unemp. %','Dem. rep. x unemp. %')
htmlTable::htmlTable(simple_table[order(coef,)])
#
#   simple_table = cbind(coef_cast3[,c(1:3)],  coef_cast4[,c(2:3)])
#   simple_table$coef <- gsub('^y_|^u_','',simple_table$coef )
#   simple_table$coef <- gsub(':y_|:u_','x',simple_table$coef )
#   simple_table$coef = as.factor(simple_table$coef)
#
#   simple_table$coef = fct_recode(simple_table$coef, '(intercept)' = 'mu.u',
#                                  '% wilderness area' = 'Wilderness_Perc',
#                                  '% dem. vote share' = 'percentD_H',
#                                  '% housing in WUI' = 'Perc_WUI_Housing',
#                                  '# listed species' = 'Count_EorT_Species','ln(forest acreage)'='Ln_ACRES',
#                                  '% burned (last 5 years)'='Burned_Perc_Past5yrs','LCV annual score'='LCV_annual',
#                                  'Unemployment %' = 'Unemp_Rate','% extraction employ.' = 'Perc_Extraction_Employ',
#                                  'ln(yearly visitation)' = 'Ln_AVERAGE_YEARLY_VISITS','ln(county NR GDP ($1M))' = 'ln_County_naturalresource_GDP_1M',
#                                  'ln(avg. board feet, 1999 to 2004)' = "Ln_Avg_MBF_Cut_1999_2004" ,
#                                  'NEPA grazing actions, 1993 to 2004' = "ALLOTMENT_NEPA_1993_2004",
#                                  'Mining claim actions, 1993 to 2004' = "MINING_CLAIM_ACTIONS_1993_2004" ,
#                                  'Democratic president' = 'demPres','Democratic congress' = 'demCongress',
#                                  "% dem. vote x unemp. %" = "Unemp_RatexpercentD_H"   ,
#                                  'Dem. rep.' = 'democrat','Dem. rep. x unemp. %' = "Unemp_Ratexdemocrat" ,
#                                  'LCV annual x unemp. %' = 'Unemp_RatexLCV_annual',
#                                  'House committee LCV' = 'ComLCV','House chair LCV' = 'ChairLCV')
#   simple_table$coef  = fct_relevel( simple_table$coef ,'(intercept)','ln(forest acreage)','ln(yearly visitation)',
#                                     'ln(avg. board feet, 1999 to 2004)' ,
#                                     'NEPA grazing actions, 1993 to 2004' ,
#                                     'Mining claim actions, 1993 to 2004',
#                                     '% wilderness area','# listed species','% burned (last 5 years)','% housing in WUI',
#                                     '% extraction employ.','ln(county NR GDP ($1M))',
#                                     'Democratic president','Democratic congress',
#                                     '% dem. vote share','LCV annual score','Dem. rep.', 'Unemployment %',
#                                     "% dem. vote x unemp. %",'LCV annual x unemp. %','Dem. rep. x unemp. %')
#
#   htmlTable::htmlTable( simple_table[order(coef,)])
#
HTML(coef_cast1, file = paste0('output/policypolitics/tables/extractive_coefs',names(mod_name_sets[mod]),'.html'),row.names = F)
HTML(coef_cast2, file = paste0('output/policypolitics/tables/extractive_coefs',names(mod_name_sets[mod]),'.html'),row.names = F)
#
# HTML(coef_cast3, file = paste0('output/policypolitics/tables/recreation_coefs',names(mod_name_sets[mod]),'.html'),row.names = F)
# HTML(coef_cast4, file = paste0('output/policypolitics/tables/recreation_coefs',names(mod_name_sets[mod]),'.html'),row.names = F)
#
coef_results = rbindlist(lapply(seq_along(model_list_of_lists),function(x) model_list_of_lists[[x]]$summary.fixed[,c(1,3,5)] %>%
mutate(specification = x,coef = rownames(.),  form =   names(model_list_of_lists)[x])))
coef_results = coef_results[!coef%in%c('mu.u','mu.y')]
#coef_results = coef_results[specification!=3,]
coef_results$specification <-   spec_names$name[match(coef_results$specification,spec_names$specification)]
coef_results$specification <- fct_inorder(coef_results$specification)
coef_results$lik <- ifelse(grepl('^u_|mu\\.u',coef_results$coef),'# projects','CEs/total analyses')
coef_results$coef <- gsub('^y_|^u_','',coef_results$coef)
coef_results$coef <- gsub(':y_|:u_','x',coef_results$coef)
coef_results$coef = fct_recode(coef_results$coef, '% wilderness area' = 'Wilderness_Perc',
'% dem. vote share' = 'percentD_H',
'% housing in WUI' = 'Perc_WUI_Housing',
'# listed species' = 'Count_EorT_Species','ln(forest acreage)'='Ln_ACRES',
'% burned (last 5 years)'='Burned_Perc_Past5yrs','LCV annual score'='LCV_annual',
'Unemployment %' = 'Unemp_Rate','% extraction employ.' = 'Perc_Extraction_Employ',
'ln(yearly visitation)' = 'Ln_AVERAGE_YEARLY_VISITS','ln(county NR GDP ($1M))' = 'ln_County_naturalresource_GDP_1M',
'ln(avg. board feet, 1999 to 2004)' = "Ln_Avg_MBF_Cut_1999_2004" ,
'NEPA grazing actions, 1993 to 2004' = "ALLOTMENT_NEPA_1993_2004",
'Mining claim actions, 1993 to 2004' = "MINING_CLAIM_ACTIONS_1993_2004" ,
'Democratic president' = 'demPres','Democratic congress' = 'demCongress',
"% dem. vote x unemp. %" = "Unemp_RatexpercentD_H"   ,
'ln(Resource receipts, last 4 yrs)' = 'ln_Receipts_Extraction_1M_P4',
'ln(Recreation receipts, last 4 yrs)' = 'ln_Receipts_Recreation_1M_P4',
'Public ideology' = 'mrp_mean',
'% change in receipts (vs. t-4)' = 'Total_Receipts_4yr_Change_Perc',
'Dem. rep.' = 'democrat','Dem. rep. x unemp. %' = "Unemp_Ratexdemocrat" ,
'LCV annual x unemp. %' = 'Unemp_RatexLCV_annual',
'House committee LCV' = 'ComLCV','House chair LCV' = 'ChairLCV')
#coef_results$coef <- fct_inorder(coef_results$coef)
coef_results$coef <- fct_relevel(coef_results$coef,'ln(forest acreage)','ln(yearly visitation)',
'ln(avg. board feet, 1999 to 2004)' ,
'ln(Resource receipts, last 4 yrs)',
'ln(Recreation receipts, last 4 yrs)' ,
'% change in receipts (vs. t-4)',
'NEPA grazing actions, 1993 to 2004' ,
'Mining claim actions, 1993 to 2004',
'% wilderness area','# listed species','% burned (last 5 years)','% housing in WUI',
'% extraction employ.','ln(county NR GDP ($1M))',
'Democratic president','Democratic congress',   'Public ideology' ,
'% dem. vote share','LCV annual score','Dem. rep.', 'Unemployment %',
"% dem. vote x unemp. %",'LCV annual x unemp. %','Dem. rep. x unemp. %')
coef_results$coef <- fct_rev(coef_results$coef)
coef_results$sig <- (!(coef_results$`0.025quant`<0 & coef_results$`0.975quant`>0)) + 0
base_coefs = coef_results[specification%in%'Annual LCV score',]
#base_coefs$DV <- ifelse(grepl('All',base_coefs$DV),'All',ifelse(grepl('Recreat',base_coefs$DV),'Wildlife/recreation','Extractive'))
base_coefs$DV <- ifelse(grepl('alt',base_coefs$form),'receipts','no receipts')
#base_coefs$specification = ifelse(base_coefs$specification==1,'Restricted model','w/ national leadership')
base_all = ggplot(base_coefs,aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~DV,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank()) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome') +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Predicing projects by forest and Congress') +
NULL
ggsave(base_all,filename = paste0('output/policypolitics/figures/coefplot_compare_withreceipts','.png'),dpi = 300,width = 7.5,height = 7,units = 'in')
extract_coefs = coef_results
#
# extract_coefs2$CX = 1
# extract_coefs$CX = 0
# extract_coefs$CX  = ifelse(extract_coefs$CX == 'count w/CX','w/CX','EA + EIS only')
# extract_coefs = rbind(extract_coefs,extract_coefs2)
# extract_coefs = extract_coefs[extract_coefs$specification == 1,]
# test = ggplot(extract_coefs,aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
#                          y = coef,col = lik,fill = as.factor(sig),group = lik)) +
#   geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
#   geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
#   geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
#   geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
#   facet_grid(~CX,scales = 'fixed') + theme_bw() +
#   theme(legend.position = 'bottom',axis.title.y = element_blank()) +
#   scale_x_continuous(name = '95% credible interval') +
#   # scale_shape_manual(values = c(19,21))
#   #scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#   #scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
#   scale_fill_manual(values = c('white',NA)) +
#   scale_color_tableau(name = 'Stage',labels =  c('procedural','distributive')) +
#   guides(shape = FALSE,fill = FALSE) +
#   ggtitle('Extractive projects') +
#   NULL
#
# ggsave(test,filename = 'test.withdrops.png',dpi = 300,height = 6,width= 6,units = 'in')
variations = c('LCV','Dem. rep','% dem')
varnames = c('LCV','demRep','demVote')
x = 1
extract_coefs$specification
extract_comp = ggplot(extract_coefs[grepl(variations[x],specification)&!grepl('alt',form),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
extract_coefs
extract_comp
extract_coefs$specification
extract_coefs[grepl(variations[x],specification)&!grepl('alt',form),]
extract_coefs[grepl(variations[x],specification),]
extract_coefs[grepl(variations[x],specification),]$form
model_names
coef_results = rbindlist(lapply(seq_along(model_list_of_lists),function(x) model_list_of_lists[[x]]$summary.fixed[,c(1,3,5)] %>%
mutate(specification = x,coef = rownames(.),  form =   names(model_list_of_lists)[x])))
coef_results$form
coef_results = coef_results[!coef%in%c('mu.u','mu.y')]
#coef_results = coef_results[specification!=3,]
coef_results$specification <-   spec_names$name[match(coef_results$specification,spec_names$specification)]
coef_results$specification <- fct_inorder(coef_results$specification)
coef_results$lik <- ifelse(grepl('^u_|mu\\.u',coef_results$coef),'# projects','CEs/total analyses')
coef_results$coef <- gsub('^y_|^u_','',coef_results$coef)
coef_results$coef <- gsub(':y_|:u_','x',coef_results$coef)
coef_results$coef = fct_recode(coef_results$coef, '% wilderness area' = 'Wilderness_Perc',
'% dem. vote share' = 'percentD_H',
'% housing in WUI' = 'Perc_WUI_Housing',
'# listed species' = 'Count_EorT_Species','ln(forest acreage)'='Ln_ACRES',
'% burned (last 5 years)'='Burned_Perc_Past5yrs','LCV annual score'='LCV_annual',
'Unemployment %' = 'Unemp_Rate','% extraction employ.' = 'Perc_Extraction_Employ',
'ln(yearly visitation)' = 'Ln_AVERAGE_YEARLY_VISITS','ln(county NR GDP ($1M))' = 'ln_County_naturalresource_GDP_1M',
'ln(avg. board feet, 1999 to 2004)' = "Ln_Avg_MBF_Cut_1999_2004" ,
'NEPA grazing actions, 1993 to 2004' = "ALLOTMENT_NEPA_1993_2004",
'Mining claim actions, 1993 to 2004' = "MINING_CLAIM_ACTIONS_1993_2004" ,
'Democratic president' = 'demPres','Democratic congress' = 'demCongress',
"% dem. vote x unemp. %" = "Unemp_RatexpercentD_H"   ,
'ln(Resource receipts, last 4 yrs)' = 'ln_Receipts_Extraction_1M_P4',
'ln(Recreation receipts, last 4 yrs)' = 'ln_Receipts_Recreation_1M_P4',
'Public ideology' = 'mrp_mean',
'% change in receipts (vs. t-4)' = 'Total_Receipts_4yr_Change_Perc',
'Dem. rep.' = 'democrat','Dem. rep. x unemp. %' = "Unemp_Ratexdemocrat" ,
'LCV annual x unemp. %' = 'Unemp_RatexLCV_annual',
'House committee LCV' = 'ComLCV','House chair LCV' = 'ChairLCV')
#coef_results$coef <- fct_inorder(coef_results$coef)
coef_results$coef <- fct_relevel(coef_results$coef,'ln(forest acreage)','ln(yearly visitation)',
'ln(avg. board feet, 1999 to 2004)' ,
'ln(Resource receipts, last 4 yrs)',
'ln(Recreation receipts, last 4 yrs)' ,
'% change in receipts (vs. t-4)',
'NEPA grazing actions, 1993 to 2004' ,
'Mining claim actions, 1993 to 2004',
'% wilderness area','# listed species','% burned (last 5 years)','% housing in WUI',
'% extraction employ.','ln(county NR GDP ($1M))',
'Democratic president','Democratic congress',   'Public ideology' ,
'% dem. vote share','LCV annual score','Dem. rep.', 'Unemployment %',
"% dem. vote x unemp. %",'LCV annual x unemp. %','Dem. rep. x unemp. %')
coef_results$coef <- fct_rev(coef_results$coef)
coef_results$sig <- (!(coef_results$`0.025quant`<0 & coef_results$`0.975quant`>0)) + 0
base_coefs = coef_results[specification%in%'Annual LCV score',]
extract_coefs = coef_results
variations = c('LCV','Dem. rep','% dem')
varnames = c('LCV','demRep','demVote')
x = 1
extract_coefs[grepl(variations[x],specification),]$form
variations[x]
extract_coefs$form
extract_comp = ggplot(extract_coefs[form %in% c('form0','form0x'),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
extract_comp
ggsave(extract_comp,filename = paste0('output/policypolitics/figures/coefplot_extraction_',varnames[x],'.png'),dpi = 300,width = 7.5,height = 8,units = 'in')
varnames[x]
extract_comp = ggplot(extract_coefs[form %in% c('form0alt','form0xalt'),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
ggsave(extract_comp,filename = paste0('output/policypolitics/figures/coefplot_extraction_',varnames[x],'.receipts.png'),dpi = 300,width = 7.5,height = 8,units = 'in')
#setwd('../manitou')
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(INLA)){install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE);require(INLA)}
if(!require(INLAutils)){devtools::install_github('timcdlucas/INLAutils');require(INLAutils)}
if(!require(matrixStats)){install.packages('matrixStats');require(matrixStats)}
# From github
library(devtools)
library(ggthemes)
empty_list = data.table()
locs = 'output/policypolitics/model_objects/'
model_sets = list.files('output/policypolitics/model_objects/','models')
model_sets <- model_sets[which(grepl('Purpose.*Extract',model_sets))]
model_list_of_lists = lapply(model_sets,function(x) readRDS(paste0(locs,x)))
uy_ex = model_list_of_lists[[1]][[1]]$.args$data$Y
uy_rec = model_list_of_lists[[2]][[1]]$.args$data$Y
#correlation between extraction and rec counts
cor(uy_ex[,1],uy_rec[,1],use = 'pairwise.complete.obs')
#correlation between extraction and rec CE ratios
cor(uy_ex[,2],uy_rec[,2],use = 'pairwise.complete.obs')
uy_ex[which(is.na(uy_ex[,2])),1]
eu = as.numeric(uy_ex[1:nrow(uy_ex)/2,1])
ey = as.numeric(uy_ex[(1:nrow(uy_ex)/2) + nrow(uy_ex)/2,2])
cor(cbind(eu,ey),use = 'pairwise.complete.obs')
#modnames = str_remove(str_remove(str_extract(model_sets,'models_[A-Z-a-z_]+'),'models_Type_Purpose'),'models_Type_')
mod_names = gsub('\\.RDS','',str_remove(model_sets,'models_Type_Purpose_'))
bprior <- list(prior = 'gaussian', param = c(0,1))
allvars = lapply(model_list_of_lists,function(x) sapply(x,function(y) y$model.matrix@Dimnames[[2]]))
intervars = lapply(allvars,function(x) lapply(x,function(y) grep(':',y,value=T)))
i = 1; j = 2
print(j)
tdt = as.data.table(as.matrix(model_list_of_lists[[i]][[j]]$model.matrix))
tdt
names(model_list_of_lists[[i]])
names(model_list_of_lists[[i]])[j]
for(i in seq_along(intervars)){
for(j in seq_along(intervars[[i]])){
if(length(intervars[[i]][[j]])>0){
print(j)
tdt = as.data.table(as.matrix(model_list_of_lists[[i]][[j]]$model.matrix))
iname = lapply(intervars[[i]][[j]],function(k)  k)
ivars = lapply(intervars[[i]][[j]],function(k)  c(unlist(str_split(k,':'))))
temp_vars = data.table(tdt[mu.u ==1,ivars[[1]],with = F],
tdt[mu.u ==0,ivars[[2]],with = F])
cols = unlist(ivars)
x1seq = seq(0.05,0.95,0.05)
x2seq = seq(0.05,0.95,0.05)
u_combos = expand.grid(apply(temp_vars[,ivars[[1]][1],with=F],2,quantile,x1seq),
apply(temp_vars[,ivars[[1]][2],with=F],2,quantile,x2seq))
names(u_combos) = ivars[[1]]
y_combos = expand.grid(apply(temp_vars[,ivars[[2]][1],with=F],2,quantile,x1seq),
apply(temp_vars[,ivars[[2]][2],with=F],2,quantile,x2seq))
names(y_combos) = ivars[[2]]
lcomb_data = data.table(u_combos,y_combos)
lcomb_data = lcomb_data[rowSums(lcomb_data)!=0,]
# lcomb_data = lcomb_data[u_democrat!=0,]
l1 = list(lcomb_data[[ivars[[1]][1]]])
names(l1) <- ivars[[1]][1]
lcu <- inla.make.lincombs(
'l1' = lcomb_data[[ivars[[1]][1]]],
"l2" = lcomb_data[[ivars[[1]][2]]],
"l3"  = lcomb_data[[ivars[[1]][1]]] * lcomb_data[[ivars[[1]][2]]])
for(n in seq_along(lcu)){
names(lcu[[n]][[1]]) <- ivars[[1]][1]
names(lcu[[n]][[2]]) <- ivars[[1]][2]
names(lcu[[n]][[3]]) <- iname[1]
}
lcy <- inla.make.lincombs(
'l1' = lcomb_data[[ivars[[2]][1]]],
"l2" = lcomb_data[[ivars[[2]][2]]],
"l3"  = lcomb_data[[ivars[[2]][1]]] * lcomb_data[[ivars[[2]][2]]])
for(n in seq_along(lcy)){
names(lcy[[n]][[1]]) <- ivars[[2]][1]
names(lcy[[n]][[2]]) <- ivars[[2]][2]
names(lcy[[n]][[3]]) <- iname[2]
}
names(lcu) = paste('u', 1:length(lcu), sep="")
names(lcy) = paste('y', 1:length(lcy), sep="")
lc = c(lcu, lcy)
u.sdres <- sd(model_list_of_lists[[i]][[j]]$.args$data$u,na.rm = T)#sd(y_like[is.finite(y_lik)])
y.sdres <- sd(model_list_of_lists[[i]][[j]]$.args$data$y/model_list_of_lists[[i]][[j]]$.args$data$u,na.rm=T)
pc.prec.u = list(prec = list(prior = "pc.prec", param = c(3*u.sdres, 0.01)))
pc.prec.y = list(prec = list(prior = "pc.prec", param = c(3*y.sdres, 0.01)))
# famcontrol = list(list(prior = "pcprec", param = c(3*u.sdres,0.01)),
#                  list(prior = "pcprec", param = c(3*y.sdres,0.01)))
newmodel = inla(formula = model_list_of_lists[[i]][[j]]$.args$formula ,control.compute = list(waic=TRUE,dic=TRUE),
c('poisson', 'binomial'),Ntrials = model_list_of_lists[[i]][[j]]$.args$Ntrials,
# control.inla= list(strategy = "gaussian", int.strategy = "eb"),
#control.family = famcontrol,
control.fixed = list(expand.factor.strategy = "inla"),
data=model_list_of_lists[[i]][[j]]$.args$data,lincomb = lc,
control.update = list(result = model_list_of_lists[[i]][[j]]),
control.predictor=list(compute=TRUE),verbose=F)
lcd = newmodel$summary.lincomb.derived
lcd$id = rownames(lcd)
lcd$group = str_extract(lcd$id,'^[u-y]')
lcd$group = ifelse(lcd$group== 'u','Project count','CE/total NEPA analyses')
lcd$group <- fct_rev(as.factor(lcd$group))
qvals = rbind(lcomb_data[,1:2],lcomb_data[,3:4],use.names = F)
names(qvals) <- c('scale_val1','scale_val2')
lcd$x1_quantile = unlist(replicate(2,rep(x1seq,nrow(lcd)/2/length(x1seq)),simplify = F))
lcd$x2_quantile = unlist(replicate(2,rep(x2seq,each = nrow(lcd)/2/length(x2seq)),simplify = F))
lcd = cbind(lcd,qvals)
axnames = unique(str_remove(names(temp_vars),'^[u-y]_'))
lcd[[axnames[[1]]]]<-lcomb_data[[names(temp_vars)[1]]]
lcd[[axnames[[2]]]]<-lcomb_data[[names(temp_vars)[2]]]
intername = gsub(':','x',str_remove_all(iname[[1]],'u_'))
figname = paste(mod_names[i],intername,sep='_')
lcd = data.table(lcd)
#lcd = lcd[!duplicated(paste(scale_val1,scale_val2,group)),]
lcd$i = i
lcd$j = j
lcd$DV <- mod_names[i]
lcd$form <-  names(model_list_of_lists[[i]])[j]
empty_list = rbind(empty_list,lcd,fill = T,use.names = T)
}
}
}
fwrite(empty_list,'output/policypolitics/interaction_results_withdrops.csv')
empty_list = fread('output/policypolitics/interaction_results_withdrops.csv')
#qvals = c('0.05','0.25','0.5','0.75','0.95')
qvals_LCV = c('0.05','0.95')
qval_labels_lcv = c('~0','~95')
qvals_demVS = c('0.05','0.95')
qval_labels_dmVS = c('15%','65%')
qvals_Dem = c(0.05,0.90)
qval_labels_DEM = c('Republican','Democrat')
ext_dt = empty_list[DV=='Extractive.withdrops',]
ext_dt$sig = ifelse(ext_dt$`0.025quant`<0&ext_dt$`0.975quant`>0,0,1)
ext_dt_lcv = ext_dt[!is.na(LCV_annual)& x2_quantile %in% qvals_LCV,]
ext_dt_dem = ext_dt[!is.na(percentD_H)&x2_quantile %in% qvals_demVS,]
ext_dt_rep = ext_dt[!is.na(democrat)&x2_quantile %in% qvals_Dem,]
ext_dt_lcv[group=='Project count']
empty_list
#qvals = c('0.05','0.25','0.5','0.75','0.95')
qvals_LCV = c('0.05','0.95')
qval_labels_lcv = c('~0','~95')
qvals_demVS = c('0.05','0.95')
qval_labels_dmVS = c('15%','65%')
qvals_Dem = c(0.05,0.90)
qval_labels_DEM = c('Republican','Democrat')
ext_dt = empty_list[DV=='Extractive',]
ext_dt$sig = ifelse(ext_dt$`0.025quant`<0&ext_dt$`0.975quant`>0,0,1)
ext_dt_lcv = ext_dt[!is.na(LCV_annual)& x2_quantile %in% qvals_LCV,]
ext_dt_dem = ext_dt[!is.na(percentD_H)&x2_quantile %in% qvals_demVS,]
ext_dt_rep = ext_dt[!is.na(democrat)&x2_quantile %in% qvals_Dem,]
((gg_lcv_vs_unemp_extraction = ggplot(data = ext_dt_lcv[group=='Project count'&grepl('alt',form)],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_fill_manual(values = c('white',NA)) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_color_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
#scale_color_viridis_d(name = 'annual LCV score',option = 'D',labels=qval_labels_lcv) +
guides(fill = FALSE) +
ggtitle('# extractive projects',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25)))))
ggsave(gg_lcv_vs_unemp_extraction,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_projcount_lcv_vs_unemp.receipts.png'))
((gg_lcv_vs_unemp_extraction = ggplot(data = ext_dt_lcv[group=='Project count'&!grepl('alt',form)],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_fill_manual(values = c('white',NA)) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_color_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
#scale_color_viridis_d(name = 'annual LCV score',option = 'D',labels=qval_labels_lcv) +
guides(fill = FALSE) +
ggtitle('# extractive projects',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25)))))
ggsave(gg_lcv_vs_unemp_extraction,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_projcount_lcv_vs_unemp.png'))
(gg_lcv_vs_unemp_extraction = ggplot(data = ext_dt_lcv[group=="CE/total NEPA analyses"&grepl('alt',form),],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_fill_manual(values = c('white',NA)) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
#scale_color_viridis_d(name = 'annual LCV score',option = 'D',labels=qval_labels_lcv) +
scale_color_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
guides(fill = FALSE) +
ggtitle('CEs/total NEPA analyses',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_lcv_vs_unemp_extraction,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_CEratio_lcv_vs_unemp.receipts.png'))
(gg_lcv_vs_unemp_extraction = ggplot(data = ext_dt_lcv[group=="CE/total NEPA analyses"&!grepl('alt',form),],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_fill_manual(values = c('white',NA)) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
#scale_color_viridis_d(name = 'annual LCV score',option = 'D',labels=qval_labels_lcv) +
scale_color_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
guides(fill = FALSE) +
ggtitle('CEs/total NEPA analyses',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_lcv_vs_unemp_extraction,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_CEratio_lcv_vs_unemp.png'))
setwd("../tuolumne/")
library(spacyr)
system('which python3')
spacy_initialize(model = 'en_core_web_sm',python_executable = '/usr/bin/python3')
spacy_initialize(model = 'en_core_web_sm',python_executable = '/opt/anaconda3/bin/python3')
