lcd[[axnames[[2]]]]<-lcomb_data[[names(temp_vars)[2]]]
intername = gsub(':','x',str_remove_all(iname[[1]],'u_'))
figname = paste(mod_names[i],intername,sep='_')
lcd = data.table(lcd)
#lcd = lcd[!duplicated(paste(scale_val1,scale_val2,group)),]
lcd$i = i
lcd$j = j
lcd$DV <- mod_names[i]
lcd$form <-  names(model_list_of_lists[[i]])[j]
empty_list = rbind(empty_list,lcd,fill = T,use.names = T)
}
}
}
fwrite(empty_list,'output/policypolitics/interaction_results.csv')
#empty_list$outcome = name_matcher$outcome[match(empty_list$i,name_matcher$i)]
empty_list = fread('output/policypolitics/interaction_results.csv')
#qvals = c('0.05','0.25','0.5','0.75','0.95')
qvals_LCV = c('0.05','0.95')
qval_labels_lcv = c('~0','~95')
qvals_demVS = c('0.05','0.95')
qval_labels_dmVS = c('15%','65%')
qvals_Dem = c(0.05,0.90)
qval_labels_DEM = c('Republican','Democrat')
ext_dt = empty_list[DV=='Extractive',]
ext_dt$sig = ifelse(ext_dt$`0.025quant`<0&ext_dt$`0.975quant`>0,0,1)
ext_dt_lcv = ext_dt[!is.na(LCV_annual)& x2_quantile %in% qvals_LCV,]
ext_dt_dem = ext_dt[!is.na(percentD_H)&x2_quantile %in% qvals_demVS,]
ext_dt_rep = ext_dt[!is.na(democrat)&x2_quantile %in% qvals_Dem,]
((gg_lcv_vs_unemp_extraction = ggplot(data = ext_dt_lcv[group=='Project count'&!grepl('alt',form)],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_fill_manual(values = c('white',NA)) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_color_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
#scale_color_viridis_d(name = 'annual LCV score',option = 'D',labels=qval_labels_lcv) +
guides(fill = FALSE) +
ggtitle('# extractive projects',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25)))))
ggsave(gg_lcv_vs_unemp_extraction,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_projcount_lcv_vs_unemp.png'))
(gg_lcv_vs_unemp_extraction = ggplot(data = ext_dt_lcv[group=="CE/total NEPA analyses"&!grepl('alt',form),],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_fill_manual(values = c('white',NA)) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
#scale_color_viridis_d(name = 'annual LCV score',option = 'D',labels=qval_labels_lcv) +
scale_color_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
guides(fill = FALSE) +
ggtitle('CEs/total NEPA analyses',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_lcv_vs_unemp_extraction,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_CEratio_lcv_vs_unemp.png'))
(gg_percentD_H_vs_unemp_extraction = ggplot(data = ext_dt_dem[group=='Project count',],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,
fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
facet_wrap(~ group, scales = 'free_y',ncol = 2) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
# scale_color_viridis_d(name = 'dem. vote share quantile',option = 'D',labels=qval_labels_dmVS) +
scale_fill_manual(values = c('white',NA)) +
scale_colour_colorblind(name = 'dem. vote share',labels=qval_labels_dmVS) +
guides(fill = F) +
ggtitle('# extractive projects',subtitle= 'Dem. vote share x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_percentD_H_vs_unemp_extraction,dpi = 300,width = 5,height = 4, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_projcount_percentD_H_vs_unemp.png'))
(gg_percentD_H_vs_unemp_extraction = ggplot(data = ext_dt_dem[group=="CE/total NEPA analyses",],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
facet_wrap(~ group, scales = 'free_y',ncol = 2) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_fill_manual(values = c('white',NA)) +
scale_colour_colorblind(name = 'dem. vote share',labels=qval_labels_dmVS) +
guides(fill = F) +
ggtitle('CEs/total NEPA analyses',subtitle= 'Dem. vote share x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_percentD_H_vs_unemp_extraction,dpi = 300,width = 5,height = 4, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_CEratio_percentD_H_vs_unemp.png'))
(gg_demRep_vs_unemp_extraction = ggplot(data = ext_dt_rep[group=='Project count',],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,
fill= as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
facet_wrap(~ group, scales = 'free_y',ncol = 2) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_fill_manual(values = c('white',NA)) +
scale_colour_colorblind(name = 'Representative',labels=qval_labels_DEM) +
guides(fill = F) +
ggtitle('# extractive projects',subtitle ='Dem. rep. x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_demRep_vs_unemp_extraction,dpi = 300,width = 5,height = 4, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_projcount_demRep_vs_unemp_extraction.png'))
gg_demRep_vs_unemp_extraction = ggplot(data = ext_dt_rep[group=="CE/total NEPA analyses",],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,
fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
facet_wrap(~ group, scales = 'free_y',ncol = 2) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_fill_manual(values = c('white',NA)) +
scale_colour_colorblind(name = 'Representative',labels=qval_labels_DEM) +
guides(fill = F) +
ggtitle('CEs/total NEPA analyses',subtitle ='Dem. rep. x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.15),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25)))
ggsave(gg_demRep_vs_unemp_extraction,dpi = 300,width = 5,height = 4, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_extraction_CEratio_demRep_vs_unemp_extraction.png'))
rec_ct = empty_list[DV== "Recreation_Wildlife",]
rec_ct$sig = ifelse(rec_ct$`0.025quant`<0&rec_ct$`0.975quant`>0,0,1)
rec_ct_lcv = rec_ct[!is.na(LCV_annual)&x2_quantile %in% qvals_LCV,]
rec_ct_dem = rec_ct[!is.na(percentD_H)&x2_quantile %in% qvals_demVS,]
rec_ct_rep = rec_ct[!is.na(democrat)&x2_quantile %in% qvals_Dem,]
exp(0.12066251 )
rec_ct[!is.na(LCV_annual)&x1_quantile==0.75&x2_quantile %in% qvals_LCV,]
quantile(nf$Unemp_Rate,0.75)
exp(0.083)
(gg_lcv_vs_unemp_rec = ggplot(data = rec_ct_lcv[group=='Project count'],
aes(x = x1_quantile,y = mean,ymin = `0.025quant`,fill = as.factor(sig),
ymax = `0.975quant`,group = as.factor(x2_quantile),
col = as.factor(x2_quantile)))  +
# facet_wrap(~ group, scales = 'free_y',ncol = 2) +
#geom_path(position = position_dodge(0.05)) +
geom_errorbar(position = position_dodge(0.05)) +
geom_point(position = position_dodge(0.05),pch = 19) +
geom_point(position = position_dodge(0.05),pch = 21) +
scale_x_continuous(name = paste('% unemployment quantile')) +
scale_y_continuous(name = '95% credible interval')+
scale_fill_manual(values = c('white',NA)) +
scale_colour_colorblind(name = 'annual LCV score',labels=qval_labels_lcv) +
guides(fill = F) +
ggtitle('# rec./wildlife projects',subtitle ='LCV annual x unemployment %')+
theme_bw() + theme(legend.position = c(0.2,0.2),legend.direction = 'vertical',
legend.title=element_text(size = 10),legend.background = element_rect(fill = alpha('white',0.25))))
ggsave(gg_lcv_vs_unemp_rec,dpi = 300,width = 6,height = 4.5, units = 'in',
filename = paste0('output/policypolitics/figures/interaction_recwildlife_projcount_lcv_vs_unemp.png'))
extract_coefs$specification
grid.arrange(list(lcv1,clv2))
grid.arrange(list(lcv1,lcv2))
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(INLA)){install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE);require(INLA)}
if(!require(forcats)){install.packages('forcats');library(forcats)}
if(!require(ggstance)){install.packages('ggstance');library(ggstance)}
if(!require(ggthemes)){install.packages('ggthemes');library(ggthemes)}
if(!require(scales)){install.packages('scales');library(scales)}
if(!require(R2HTML)){install.packages('R2HTML');library(R2HTML)}
if(!require(sf)){install.packages('sf');library(sf)}
td = tempdir()
albersNA <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-110 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m"
#
# admin_url = "https://data.fs.usda.gov/geodata/edw/edw_resources/shp/S_USA.AdministrativeForest.zip"
# tf = tempfile(tmpdir=td, fileext=".zip")
# download.file(admin_url, tf)
# fname = unzip(tf, list=TRUE)
# unzip(tf, files=fname$Name, exdir=td, overwrite=TRUE)
# fpath = file.path(td, grep('shp$',fname$Name,value=T))
# admin_districts <- st_read(fpath)
# admin_districts <- st_transform(admin_districts,crs = st_crs(albersNA))
# fix bad polygons
# bad_polys = !st_is_valid(admin_districts)
#  admin_districts[bad_polys,] <- st_make_valid(admin_districts[bad_polys,])
admin_districts <- readRDS('scratch/admin_units_clean.RDS')
admin_districts$FORESTORGC = as.character(admin_districts$FORESTORGC)
admin_districts$FOREST_ID = admin_districts$FORESTORGC
admin_districts$FOREST_ID = formatC(admin_districts$FORESTORGC,width=4,flag = 0)
file.remove(list.files('output/policypolitics/tables/',pattern = 'coefs',full.names = T))
locs = 'output/policypolitics/model_objects/'
spec_names = data.table(specification = 1:6,name =c('Annual LCV score','LCV x % unemp','% dem. vote','% dem. x % unemp','Dem. rep.','Dem. rep. % unemp.'))
model_sets = list.files('output/policypolitics/model_objects/','Purpose.*Ext')
model_names = str_remove(model_sets,'models_Type_Purpose_')
# lapply(seq_along(mod_name_sets),function(mod){
mod = 1
mod_list = readRDS(paste0('output/policypolitics/model_objects/models_Type_Purpose_Extractive.RDS'))
model_list_of_lists = readRDS(paste0(locs,model_sets))
temp = (model_list_of_lists[[2]])
congressA = ggplot(temp$summary.random$u_congress_id ,aes(x = as.factor(ID),y = mean,ymin = `0.025quant`,ymax = `0.975quant`)) + geom_point() + geom_errorbar() + theme_bw() +
ggtitle('modeled intercept by congress for total project')
congressB = ggplot(temp$summary.random$y_congress_id ,aes(x = as.factor(ID),y = mean,ymin = `0.025quant`,ymax = `0.975quant`)) + geom_point() + geom_errorbar() + theme_bw() +
ggtitle('modeled intercept by congress for CE/total projects')
library(gridExtra)
grid.arrange(congressA,congressB,ncol = 2)
(waic_table = as.data.table(lapply(model_list_of_lists,function(y) y$waic$waic)))
#colnames(waic_table) <- names(model_list_of_lists)
fwrite(waic_table,'output/policypolitics/tables/waic_table.csv')
coef_df = rbindlist(lapply(seq_along(model_list_of_lists), function(y) {
model_list_of_lists[[y]]$summary.fixed[,c(1,3,5)] %>% mutate(coef = rownames(.), mod = y,DV = names(model_list_of_lists)[y])}))
coef_df$cred = paste(formatC(round(coef_df$mean,3),digits = 3,flag = 0),paste0('(',
formatC(round(coef_df$`0.025quant`,3),digits = 3,flag = 0),', ',
formatC(round(coef_df$`0.975quant`,3),digits = 3,flag = 0),')'))
coef_df$DV <- 'Extractive'
coef_df_s1 = coef_df[grepl('Extr',DV),.(coef,cred,mod)][grepl('^u|mu\\.u',coef),]
coef_df_s2 = coef_df[grepl('Extr',DV),.(coef,cred,mod)][!grepl('^u|mu\\.u',coef),]
#coef_df_s3 = coef_df[grepl('Rec',DV),.(coef,cred,mod)][grepl('^u|mu\\.u',coef),]
#coef_df_s4 = coef_df[grepl('Rec',DV),.(coef,cred,mod)][!grepl('^u|mu\\.u',coef),]
coef_df$coef <- fct_inorder(coef_df$coef)
coef_cast1 = dcast(coef_df_s1,coef ~ mod,value.var = 'cred',fill = '---')
coef_cast2 = dcast(coef_df_s2,coef ~ mod,value.var = 'cred',fill = '---')
#coef_cast3 = dcast(coef_df_s3,coef ~ mod,value.var = 'cred',fill = '---')
#coef_cast4 = dcast(coef_df_s4,coef ~ mod,value.var = 'cred',fill = '---')
library(R2HTML)
simple_table = cbind(coef_cast1[,c(1:3)],  coef_cast2[,c(2:3)])
simple_table$coef <- gsub('^y_|^u_','',simple_table$coef )
simple_table$coef <- gsub(':y_|:u_','x',simple_table$coef)
simple_table$coef = as.factor(simple_table$coef)
simple_table$coef = fct_recode(simple_table$coef,
'(intercept)' = 'mu.u',
'% wilderness area' = 'Wilderness_Perc',
'% dem. vote share' = 'percentD_H',
'% housing in WUI' = 'Perc_WUI_Housing',
'# listed species' = 'Count_EorT_Species','ln(forest acreage)'='Ln_ACRES',
'% burned (last 5 years)'='Burned_Perc_Past5yrs','LCV annual score'='LCV_annual',
'Unemployment %' = 'Unemp_Rate','% extraction employ.' = 'Perc_Extraction_Employ',
'ln(yearly visitation)' = 'Ln_AVERAGE_YEARLY_VISITS','ln(county NR GDP ($1M))' = 'ln_County_naturalresource_GDP_1M',
'ln(avg. board feet, 1999 to 2004)' = "Ln_Avg_MBF_Cut_1999_2004" ,
'NEPA grazing actions, 1993 to 2004' = "ALLOTMENT_NEPA_1993_2004",
'Mining claim actions, 1993 to 2004' = "MINING_CLAIM_ACTIONS_1993_2004" ,
'Democratic president' = 'demPres','Democratic congress' = 'demCongress',
"% dem. vote x unemp. %" = "Unemp_RatexpercentD_H"   ,
'Dem. rep.' = 'democrat','Dem. rep. x unemp. %' = "Unemp_Ratexdemocrat" ,
'LCV annual x unemp. %' = 'Unemp_RatexLCV_annual',
'House committee LCV' = 'ComLCV','House chair LCV' = 'ChairLCV')
simple_table$coef  = fct_relevel( simple_table$coef ,'ln(forest acreage)','ln(yearly visitation)',
'ln(avg. board feet, 1999 to 2004)' ,
'NEPA grazing actions, 1993 to 2004' ,
'Mining claim actions, 1993 to 2004',
'% wilderness area','# listed species','% burned (last 5 years)','% housing in WUI',
'% extraction employ.','ln(county NR GDP ($1M))',
'Democratic president','Democratic congress',
'% dem. vote share','LCV annual score','Dem. rep.', 'Unemployment %',
"% dem. vote x unemp. %",'LCV annual x unemp. %','Dem. rep. x unemp. %')
temp_coef_table = simple_table[order(coef,)]
library(tableHTML)
write_tableHTML(tableHTML(temp_coef_table), file = 'output/policypolitics/tables/coefficient_estimates.html')
HTML(coef_cast1, file = paste0('output/policypolitics/tables/extractive_coefs.html'),row.names = F)
HTML(coef_cast2, file = paste0('output/policypolitics/tables/extractive_coefs.html'),row.names = F)
coef_results = rbindlist(lapply(seq_along(model_list_of_lists),function(x) model_list_of_lists[[x]]$summary.fixed[,c(1,3,5)] %>%
mutate(specification = x,coef = rownames(.),  form =   names(model_list_of_lists)[x])))
coef_results = coef_results[!coef%in%c('mu.u','mu.y')]
#coef_results = coef_results[specification!=3,]
coef_results$specification <-   spec_names$name[match(coef_results$specification,spec_names$specification)]
coef_results$specification <- fct_inorder(coef_results$specification)
coef_results$lik <- ifelse(grepl('^u_|mu\\.u',coef_results$coef),'# projects','CEs/total analyses')
coef_results$coef <- gsub('^y_|^u_','',coef_results$coef)
coef_results$coef <- gsub(':y_|:u_','x',coef_results$coef)
coef_results$coef = fct_recode(coef_results$coef, '% wilderness area' = 'Wilderness_Perc',
'% dem. vote share' = 'percentD_H',
'% housing in WUI' = 'Perc_WUI_Housing',
'# listed species' = 'Count_EorT_Species','ln(forest acreage)'='Ln_ACRES',
'% burned (last 5 years)'='Burned_Perc_Past5yrs','LCV annual score'='LCV_annual',
'Unemployment %' = 'Unemp_Rate','% extraction employ.' = 'Perc_Extraction_Employ',
'ln(yearly visitation)' = 'Ln_AVERAGE_YEARLY_VISITS','ln(county NR GDP ($1M))' = 'ln_County_naturalresource_GDP_1M',
'ln(avg. board feet, 1999 to 2004)' = "Ln_Avg_MBF_Cut_1999_2004" ,
'NEPA grazing actions, 1993 to 2004' = "ALLOTMENT_NEPA_1993_2004",
'Mining claim actions, 1993 to 2004' = "MINING_CLAIM_ACTIONS_1993_2004" ,
'Democratic president' = 'demPres','Democratic congress' = 'demCongress',
"% dem. vote x unemp. %" = "Unemp_RatexpercentD_H"   ,
'ln(Resource receipts, last 4 yrs)' = 'ln_Receipts_Extraction_1M_P4',
'ln(Recreation receipts, last 4 yrs)' = 'ln_Receipts_Recreation_1M_P4',
'Public ideology' = 'mrp_mean',
'% change in receipts (vs. t-4)' = 'Total_Receipts_4yr_Change_Perc',
'Dem. rep.' = 'democrat','Dem. rep. x unemp. %' = "Unemp_Ratexdemocrat" ,
'LCV annual x unemp. %' = 'Unemp_RatexLCV_annual',
'House committee LCV' = 'ComLCV','House chair LCV' = 'ChairLCV')
#coef_results$coef <- fct_inorder(coef_results$coef)
coef_results$coef <- fct_relevel(coef_results$coef,'ln(forest acreage)','ln(yearly visitation)',
'ln(avg. board feet, 1999 to 2004)' ,
'ln(Resource receipts, last 4 yrs)',
'ln(Recreation receipts, last 4 yrs)' ,
'% change in receipts (vs. t-4)',
'NEPA grazing actions, 1993 to 2004' ,
'Mining claim actions, 1993 to 2004',
'% wilderness area','# listed species','% burned (last 5 years)','% housing in WUI',
'% extraction employ.','ln(county NR GDP ($1M))',
'Democratic president','Democratic congress',   'Public ideology' ,
'% dem. vote share','LCV annual score','Dem. rep.', 'Unemployment %',
"% dem. vote x unemp. %",'LCV annual x unemp. %','Dem. rep. x unemp. %')
coef_results$coef <- fct_rev(coef_results$coef)
coef_results$sig <- (!(coef_results$`0.025quant`<0 & coef_results$`0.975quant`>0)) + 0
base_coefs = coef_results[specification%in%'Annual LCV score',]
#base_coefs$DV <- ifelse(grepl('All',base_coefs$DV),'All',ifelse(grepl('Recreat',base_coefs$DV),'Wildlife/recreation','Extractive'))
extract_coefs = coef_results
variations = c('LCV','Dem. rep','% dem')
varnames = c('LCV','demRep','demVote')
lapply(seq_along(variations),function(x) {
extract_comp = ggplot(extract_coefs,aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
ggsave(extract_comp,filename = paste0('output/policypolitics/figures/coefplot_extraction_',varnames[x],'.png'),dpi = 300,width = 7.5,height = 8,units = 'in')
})
temp = extract_coefs[grepl('Annual LCV',specification),]
temp$specification = 'Posterior estimates'
(lcv1 = ggplot(temp,aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
# facet_grid(~specification,scales = 'fixed') +
theme_bw() +
theme(legend.position = c(0.3,-0.14),axis.ticks.y = element_blank(),
legend.direction = 'horizontal',axis.title.y = element_blank(),
text = element_text(family = 'Times'),plot.margin = unit(c(.1,.1,1.1,.1),units = 'cm'),
# legend.title.align = -1,legend.justification = -1,
legend.background = element_rect(fill = NA),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12),legend.title = element_blank()) +
scale_x_continuous(name = '95% credible interval',limits = c(-0.9,0.9)) +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL)
ggsave(plot = lcv1,filename = 'output/policypolitics/figures/coefplot_LCV_linear.png',
width = 5,height =6, units = 'in',dpi = 300)
temp = extract_coefs[grepl('LCV x',specification),]
temp$specification = 'Posterior estimates'
(lcv2 = ggplot(temp,aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
# facet_grid(~specification,scales = 'fixed') +
theme_bw() +
theme(legend.position = c(0.3,-0.14),axis.ticks.y = element_blank(),
legend.direction = 'horizontal',axis.title.y = element_blank(),
text = element_text(family = 'Times'),plot.margin = unit(c(.1,.1,1.1,.1),units = 'cm'),
# legend.title.align = -1,legend.justification = -1,
legend.background = element_rect(fill = NA),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12),legend.title = element_blank()) +
scale_x_continuous(name = '95% credible interval',limits = c(-0.9,0.9)) +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL)
ggsave(plot = lcv2,filename = 'output/policypolitics/figures/coefplot_LCV_interaction.png',
width = 5,height =6, units = 'in',dpi = 300)
grid.arrange(list(lcv1,lcv2))
lcv1
lcv2
lapply(seq_along(variations),function(x) {
extract_comp = ggplot(extract_coefs[grepl(varnames[x],specification),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
ggsave(extract_comp,filename = paste0('output/policypolitics/figures/coefplot_extraction_',varnames[x],'.png'),dpi = 300,width = 7.5,height = 8,units = 'in')
})
x = 1
extract_comp = ggplot(extract_coefs[grepl(varnames[x],specification),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
extract_comp
lapply(seq_along(variations),function(x) {
print(x)
extract_comp = ggplot(extract_coefs[grepl(varnames[x],specification),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
ggsave(extract_comp,filename = paste0('output/policypolitics/figures/coefplot_extraction_',varnames[x],'.png'),dpi = 300,width = 7.5,height = 8,units = 'in')
})
x = 2
extract_comp = ggplot(extract_coefs[grepl(varnames[x],specification),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
extract_comp
extract_coefs$specification
lapply(seq_along(variations),function(x) {
print(x)
extract_comp = ggplot(extract_coefs[grepl(variations[x],specification),],aes(x = mean,xmin = `0.025quant`,xmax = `0.975quant`,
y = coef,col = lik,fill = as.factor(sig),group = lik)) +
geom_vline(xintercept = 0,lty = 2,col = 'grey40') +
geom_errorbarh(height = 0.1,position = position_dodgev(0.5)) +
geom_point(position = position_dodgev(0.5),pch = 19,size = 1.5) +
geom_point(position = position_dodgev(0.5),pch = 21,size = 1.5) +
facet_grid(~specification,scales = 'fixed') + theme_bw() +
theme(legend.position = 'bottom',axis.title.y = element_blank(),
axis.text = element_text(size = 12),strip.text = element_text(size = 12),
legend.text = element_text(size = 12)) +
scale_x_continuous(name = '95% credible interval') +
# scale_shape_manual(values = c(19,21))
#scale_fill_manual(name = "outcome",values = c('white','orange','white','green'),labels = c('# projects','EIS/total')) +
#scale_color_manual(name = "outcome",values = c('orange','orange','green','green'),labels = c('# projects','EIS/total')) +
scale_fill_manual(values = c('white',NA)) +
scale_color_tableau(name = 'Outcome',labels=c('# projects','CEs/total analyses')) +
guides(shape = FALSE,fill = FALSE) +
ggtitle('Extractive projects') +
NULL
ggsave(extract_comp,filename = paste0('output/policypolitics/figures/coefplot_extraction_',varnames[x],'.png'),dpi = 300,width = 7.5,height = 8,units = 'in')
})
